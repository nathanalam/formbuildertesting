{"version":3,"sources":["tabs/Tabs.js","yamlEditor/extendModes.js","yamlEditor/YamlEditor.js","ErrorBoundary.js","formBuilder/radio/FBRadioButton.js","formBuilder/radio/FBRadioGroup.js","formBuilder/Add.js","formBuilder/checkbox/FBCheckbox.js","formBuilder/Collapse/Collapse.js","formBuilder/Tooltip.js","formBuilder/dependencies/DependencyWarning.js","formBuilder/dependencies/CardSelector.js","formBuilder/CardEnumOptions.js","formBuilder/dependencies/ValueSelector.js","formBuilder/dependencies/DependencyPossibility.js","formBuilder/dependencies/DependencyField.js","formBuilder/CardModal.js","formBuilder/GeneralParameterInputs.js","formBuilder/utils.js","formBuilder/CardGeneralParameterInputs.js","formBuilder/Card.js","formBuilder/defaults/DefaultInputs.js","formBuilder/Section.js","formBuilder/defaults/ShortAnswerInputs.js","formBuilder/defaults/LongAnswerInputs.js","formBuilder/defaults/NumberInputs.js","formBuilder/defaults/ArrayInputs.js","formBuilder/defaults/defaultFormInputs.js","formBuilder/FormBuilder.js","formBuilder/CardGallery.js","formBuilder/PreDefinedGallery.js","JsonSchemaFormEditor.js","PlaygroundContainer.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","createUseStyles","portalTabs","display","padding","position","color","cursor","Tabs","defaultActiveTab","tabs","withSeparator","preventRerender","classes","useState","activeTab","setActiveTab","className","Nav","map","i","name","id","NavItem","key","NavLink","classnames","active","onClick","console","log","TabContent","Fragment","content","TabPane","tabId","ace","define","require","exports","Mode","extendModes","YamlEditor","style","width","this","props","mode","theme","onChange","rawStr","editorProps","$blockScrolling","value","yaml","height","React","Component","ErrorBoundary","state","hasError","error","setState","errorMessage","toString","onErr","errMessage","children","FBRadioButton","label","checked","required","disabled","autoFocus","type","radio","marginRight","FBRadioGroup","options","defaultValue","horizontal","Math","random","classjss","option","index","addDetails","border","borderRadius","borderBottom","margin","textAlign","Add","addElem","hidden","popoverOpen","setPopoverOpen","createChoice","setCreateChoice","UncontrolledTooltip","placement","target","Popover","isOpen","toggle","PopoverHeader","PopoverBody","selection","Button","checkbox","FBCheckbox","onChangeValue","isChecked","use","dataTest","labelClassName","potentialCheckboxId","checkboxId","data-test","undefined","htmlFor","collapseElement","marginTop","fontSize","marginLeft","Collapse","iconClasses","fas","disableToggle","toggleCollapse","title","typeMap","alert","help","toolTip","Example","text","textDecoration","href","autohide","DependencyWarning","parameters","enum","dependents","length","definedVals","Set","forEach","possibility","val","add","undefinedVals","Array","isArray","has","push","path","CardSelector","possibleChoices","chosenChoices","placeholder","chosenChoice","slice","filter","choice","includes","CardEnumOptions","initialValues","names","showNames","possibleValues","Input","ev","newVal","parseFloat","Number","isInteger","parseInt","isNaN","Error","ValueSelector","parentEnums","parentType","parentName","parentSchema","enumType","enumArr","combination","Object","keys","string","oldCombo","number","array","JSON","stringify","parse","object","newCase","propArr","properties","newEnum","DependencyPossibility","neighborNames","onDelete","newPossibility","dependencyField","marginBottom","DependencyField","valueBased","checkIfValueBasedDependency","newDependents","schema","cardModal","CardModal","componentProps","onClose","TypeSpecificParameters","componentPropsState","setComponentProps","Modal","ModalHeader","hideKey","ModalBody","newState","ModalFooter","GeneralParameterInputs","category","mods","getDefaultFormInputsWithMods","cardBody","getCardBody","CardGeneralParameterInputs","keyState","setKeyState","titleState","setTitleState","description","descriptionState","setDescriptionState","categoryMap","allFormInputs","categoryNameMap","inputName","displayName","categoryToNameMap","tooltipDescriptions","cardObjectName","replace","onBlur","$ref","cardDisplayName","readOnly","cardDescription","cardInputType","definitionData","newCategory","newProps","defaultUiSchema","defaultUiProps","defaultDataSchema","defaultDataProps","firstDefinition","default","categoryType","cardEntries","flexDirection","backgroundColor","fontWeight","cardInteractions","Card","onMoveUp","onMoveDown","cardOpen","setCardOpen","modalOpen","setModalOpen","parent","dependent","newComponentProps","CardDefaultParameterInputs","MultipleChoice","enumArray","containsUnparsableString","some","containsString","isNumber","setIsNumber","enumNames","newNum","newEnumNames","DefaultInputs","time","matchIf","types","format","modalBody","ref","widget","dropdown","sectionContainer","borderTop","paddingTop","Section","uischema","onNameChange","onRequireToggle","onDependentsChange","definitionUi","reference","categoryHash","unsupportedFeatures","checkForUnsupportedFeatures","schemaData","elementNum","countElementsFromSchema","defaultCollapseStates","cardOpenArray","setCardOpenArray","keyName","setKeyName","Alert","message","onDragEnd","result","droppableId","providedDroppable","innerRef","droppableProps","generateElementComponentsFromSchemas","uiSchemaData","element","draggableId","providedDraggable","draggableProps","dragHandleProps","addCardObj","addSectionObj","formatDictionary","email","hostname","uri","regex","autoDictionary","username","password","country","CardShortAnswerParameterInputs","minLength","maxLength","rel","pattern","ShortAnswerInput","shortAnswer","LongAnswerInput","longAnswer","CardNumberParameterInputs","multipleOf","minimum","exclusiveMinimum","newMin","maximum","exclusiveMaximum","newMax","NumberField","NumberInputs","integer","ArrayInputs","items","newDataProps","newUiProps","propName","startsWith","substring","Item","language","newArr","generateCategoryHash","minItems","maxItems","DEFAULT_FORM_INPUTS","ShortAnswerInputs","LongAnswerInputs","yamlParse","obj","yamlStringify","skipInvalid","customFormInputs","categoryName","match","hash","field","getCardCategory","cardProps","currentHash","dataOptions","uiOptions","supportedPropertyParameters","supportedUiParameters","widgets","fields","inputType","possibleOptions","supportedWidgets","supportedFields","supportedOptions","property","uiProperty","propDefined","dependencies","dependencyKey","parameter","oneOf","grouping","entries","correctName","uiProp","uiOption","checkObjectForUnsupportedFeatures","generateElement","dataProps","uiProperties","requiredNames","uiProps","newElement","elementDetails","pathArr","split","definedUiProps","propType","reservedKeys","uiKey","generateElementPropsFromSchemas","elementDict","group","possibilityIndex","requiredValues","cardPropList","remainder","remCard","elementArray","elementNames","elem","newElem","updateElementNames","elementCount","generateSchemaElementFromElement","prop","generateSchemaFromElementProps","elementArr","newSchema","dependentElements","dependentElement","elementName","childrenComponents","child","generateUiSchemaFromElementProps","uiSchema","uiOrder","definitions","updateSchemas","definedUi","newUiSchema","newElementObjArr","max","charAt","splice","elementPropArr","elementProp","expanded","getCardParameterInputComponentForType","newCardObj","oldElement","tempBlock","newRef","oldSection","newName","details","src","source","dest","destination","propagateDefinitionChanges","propagateElementChange","updatedElementArr","updatedChildren","formBuilder","float","formHead","formBody","maxHeight","overflowY","minWidth","cssFloat","formFooter","FormBuilder","lang","CardGallery","definitionSchema","definitionUiSchema","newDefinitions","newDefinitionUis","oldUi","newUi","definedUiSchemaKey","preDefinedGallery","PreDefinedGallery","references","findRefs","schemaObject","innerObj","referenceSet","newDefinitionsUi","parseForJsonSchemaForm","checkError","data","e","LangEditor","JsonSchemaFormEditor","formData","formToggle","outputToggle","schemaFormErrorFlag","validFormInput","editorWidth","submissionData","err","schemaError","schemaUiError","updateFormData","submitButtonMessage","onSubmit","updateSchema","updateUISchema","PlaygroundContainer","schemaTitle","uischemaTitle","App","basename","exact","component","Boolean","window","location","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.fa7e1927.chunk.js","sourcesContent":["// @flow\n\nimport React, { useState } from \"react\";\n\nimport classnames from \"classnames\";\nimport { TabContent, TabPane, Nav, NavItem, NavLink } from \"reactstrap\";\nimport { createUseStyles } from \"react-jss\";\n\ntype TabSpec = {\n  name: string,\n  content: Node,\n  id?: string,\n};\n\nconst useStyles = createUseStyles({\n  portalTabs: {\n    \"& .tab-content\": {\n      \"& .tab-pane > .tab-pane\": {\n        display: \"none\",\n        padding: \"2em\",\n      },\n      \"& .active > .tab-pane\": {\n        display: \"block\",\n      },\n    },\n    \"& .nav\": {\n      \"& .nav-link\": {\n        position: \"relative\",\n        display: \"inline-flex\",\n        padding: \"10px\",\n      },\n      \"& li\": {\n        display: \"inline-block\",\n      },\n      \"& .nav-item\": {\n        \"& .active\": {\n          color: \"#212529 !important\",\n          \"font-weight\": 600,\n        },\n        \"&:hover\": {\n          cursor: \"pointer\",\n        },\n        \"& a\": {\n          color: \"#ccc\",\n        },\n      },\n    },\n  },\n});\n\ntype Props = {\n  defaultActiveTab?: number,\n  tabs: TabSpec[],\n  withSeparator?: boolean,\n  preventRerender?: boolean,\n};\n\nexport default function Tabs({\n  defaultActiveTab = 0,\n  tabs = [],\n  withSeparator = false,\n  preventRerender = false,\n}: Props) {\n  const classes = useStyles();\n  const [activeTab, setActiveTab] = useState(defaultActiveTab);\n\n  return (\n    <div className={classes.portalTabs}>\n      <Nav tabs>\n        {tabs.map(({ name, id }, i) => (\n          <NavItem key={i} id={id}>\n            <NavLink\n              className={classnames({ active: activeTab === i })}\n              onClick={() => {\n                console.log(i);\n                setActiveTab(i);\n              }}\n            >\n              {name}\n            </NavLink>\n          </NavItem>\n        ))}\n      </Nav>\n      <TabContent\n        activeTab={activeTab}\n        className={classnames({\n          \"with-separator\": withSeparator,\n        })}\n      >\n        <React.Fragment>\n          {tabs.map(({ content }, i) => (\n            <TabPane key={i} tabId={i}>\n              {activeTab === i && (preventRerender ? true : content)}\n              {preventRerender ? content : \"\"}\n            </TabPane>\n          ))}\n        </React.Fragment>\n      </TabContent>\n    </div>\n  );\n}\n","/*\nAdapted from the ace yaml mode file in ace/mode/yaml\nhttps://github.com/ajaxorg/ace/blob/master/lib/ace/mode/yaml.js\n*/\n\nexport default (ace) => {\n  ace.define(\n    \"ace/mode/yaml\",\n    [\n      \"require\",\n      \"exports\",\n      \"module\",\n      \"ace/lib/oop\",\n      \"ace/mode/text\",\n      \"ace/mode/yaml_highlight_rules\",\n      \"ace/mode/matching_brace_outdent\",\n      \"ace/mode/folding/coffee\",\n    ],\n    (require, exports) => {\n      // disabling linting for file paths that won't show up to linter\n      /* eslint-disable */\n      const oop = require(\"../lib/oop\");\n      const TextMode = require(\"./text\").Mode;\n    }\n  );\n\n  ace.require(\"ace/mode/yaml\");\n};\n","// @flow\n\nimport React from \"react\";\nimport ace from \"ace-builds\";\nimport AceEditor from \"react-ace\";\nimport \"./YamlEditor.scss\";\nimport extendModes from \"./extendModes\";\n\nextendModes(ace);\n\ntype Props = {\n  onChange?: (string) => any,\n  yaml: string,\n  width?: string,\n  height?: string,\n};\n\nexport default class YamlEditor extends React.Component<Props> {\n  render() {\n    return (\n      <div className=\"yamleditor-react-container\">\n        <div\n          style={{ width: this.props.width ? this.props.width : \"500px\" }}\n          className=\"options\"\n        ></div>\n        <div className=\"container editor\">\n          <AceEditor\n            mode={\"yaml\"}\n            theme=\"github\"\n            onChange={(rawStr: string) => {\n              if (this.props.onChange) this.props.onChange(rawStr);\n            }}\n            editorProps={{\n              $blockScrolling: true,\n            }}\n            value={this.props.yaml}\n            width={\"100%\"}\n            height={this.props.height ? this.props.height : \"500px\"}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","// @flow\n\nimport React from \"react\";\n\ntype Props = {\n  children: any,\n  onErr?: (string) => any,\n  errMessage?: string,\n};\n\ntype State = {\n  hasError: boolean,\n  error: string,\n};\n\n/* \nContainer for potentially error generating components\nTriggers the optional onErr function with error message as string\nProvides the option to attempt rendering the children again\n*/\nclass ErrorBoundary extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = { hasError: false, error: \"\" };\n  }\n\n  componentDidCatch(error: any) {\n    this.setState({ hasError: true });\n    const errorMessage = error.toString();\n    this.setState({\n      error: errorMessage,\n    });\n    if (this.props.onErr) this.props.onErr(errorMessage);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <div>\n          <p>\n            {this.props.errMessage ? this.props.errMessage : this.state.error}\n          </p>\n          <button\n            onClick={() => {\n              this.setState({ hasError: false, error: \"\" });\n              if (this.props.onErr) this.props.onErr(\"\");\n            }}\n          >\n            Try Again\n          </button>\n        </div>\n      );\n    } else {\n      return this.props.children;\n    }\n  }\n}\n\nexport default ErrorBoundary;\n","// @flow\n\nimport React from 'react';\nimport classnames from 'classnames';\n\ntype Props = {\n  label: string | number,\n  value?: any,\n  name?: string,\n  checked?: boolean,\n  required?: boolean,\n  disabled?: boolean,\n  autoFocus?: boolean,\n  children?: any,\n  onChange: (any) => void,\n};\n\nexport default function FBRadioButton(props: Props) {\n  const {\n    label,\n    value,\n    checked,\n    name,\n    onChange,\n    required,\n    disabled,\n    autoFocus,\n  } = props;\n  const classes = classnames('fb-radio-button', { disabled });\n  return (\n    <label className={classes} key={value}>\n      {props.children}\n      <input\n        type=\"radio\"\n        name={name}\n        value={value}\n        checked={checked}\n        required={required}\n        disabled={disabled}\n        autoFocus={autoFocus}\n        onChange={() => onChange(value)}\n      />\n      <span className=\"fb-custom-radio-button\" />\n      {label}\n    </label>\n  );\n}\n","// @flow\n\nimport React from 'react';\nimport classnames from 'classnames';\nimport { createUseStyles } from 'react-jss';\nimport FBRadioButton from './FBRadioButton';\n\nconst useStyles = createUseStyles({\n  radio: {\n    '& input': {\n      marginRight: '5px',\n    },\n  },\n});\n\ntype Props = {\n  options: Array<{ label: string | number, value: string | number }>,\n  defaultValue?: any,\n  horizontal?: boolean,\n  id?: string,\n  required?: boolean,\n  disabled?: boolean,\n  autoFocus?: boolean,\n  onChange: (any) => void,\n};\n\nexport default function FBRadioGroup(props: Props) {\n  const {\n    options,\n    defaultValue,\n    onChange,\n    horizontal,\n    id,\n    autoFocus,\n    disabled,\n  } = props;\n  const name = Math.random().toString();\n  const classjss = useStyles();\n  const classes = classnames('fb-radio-group', {\n    horizontal,\n  });\n  return (\n    <div id={id} className={`${classes} ${classjss.radio}`}>\n      {options.map((option, index) => (\n        <FBRadioButton\n          value={option.value}\n          label={option.label}\n          id={id}\n          name={name}\n          key={option.value}\n          checked={option.value === defaultValue}\n          autoFocus={autoFocus && index === 1}\n          onChange={onChange}\n          disabled={disabled}\n        />\n      ))}\n    </div>\n  );\n}\n","// @flow\n\nimport React, { useState } from 'react';\nimport {\n  Popover,\n  PopoverHeader,\n  PopoverBody,\n  UncontrolledTooltip,\n  Button,\n} from 'reactstrap';\nimport { createUseStyles } from 'react-jss';\nimport FBRadioGroup from './radio/FBRadioGroup';\n\nconst useStyles = createUseStyles({\n  addDetails: {\n    '& .popover': {\n      width: '300px',\n      '& .popover-inner': {\n        border: '1px solid #1d71ad',\n        borderRadius: '4px',\n        '& .popover-header': { borderBottom: '1px solid #1d71ad' },\n        '& .popover-body': {\n          '& .fb-radio-group': { display: 'block' },\n          '& div': { margin: '0', display: 'inline-block', width: '50%' },\n          '& .left': { textAlign: 'left' },\n          '& .right': { textAlign: 'right' },\n        },\n      },\n    },\n  },\n});\n\nexport default function Add({\n  name,\n  addElem,\n  hidden,\n}: {\n  name: string,\n  addElem: (choice: string) => void,\n  hidden?: boolean,\n}) {\n  const classes = useStyles();\n  const [popoverOpen, setPopoverOpen] = useState(false);\n  const [createChoice, setCreateChoice] = useState('card');\n\n  return (\n    <div style={{ display: hidden ? 'none' : 'initial' }}>\n      <i\n        className=\"fa fa-plus-square card-add\"\n        onClick={() => setPopoverOpen(true)}\n        id={`${name}_add`}\n      ></i>\n      <UncontrolledTooltip placement=\"top\" target={`${name}_add`}>\n        Create new form element\n      </UncontrolledTooltip>\n      <Popover\n        placement=\"bottom\"\n        target={`${name}_add`}\n        isOpen={popoverOpen}\n        toggle={() => setPopoverOpen(false)}\n        className={`add-details ${classes.addDetails}`}\n        id={`${name}_add_popover`}\n      >\n        <PopoverHeader>Create New</PopoverHeader>\n        <PopoverBody>\n          <FBRadioGroup\n            className={'choose-create'}\n            defaultValue={createChoice}\n            horizontal={false}\n            options={[\n              {\n                value: 'card',\n                label: 'Form element',\n              },\n              {\n                value: 'section',\n                label: 'Form section',\n              },\n            ]}\n            onChange={(selection) => {\n              setCreateChoice(selection);\n            }}\n          />\n          <div className=\"left\">\n            <Button onClick={() => setPopoverOpen(false)} color=\"secondary\">\n              Cancel\n            </Button>\n          </div>\n          <div className=\"right\">\n            <Button\n              onClick={() => {\n                addElem(createChoice);\n                setPopoverOpen(false);\n              }}\n              color=\"primary\"\n            >\n              Create\n            </Button>\n          </div>\n        </PopoverBody>\n      </Popover>\n    </div>\n  );\n}\n","// @flow\n\nimport React from 'react';\nimport classnames from 'classnames';\nimport { createUseStyles } from 'react-jss';\n\nconst useStyles = createUseStyles({\n  checkbox: {\n    '& *': {\n      display: 'inline-block',\n    },\n    '& input': {\n      marginRight: '5px',\n    },\n  },\n});\n\ntype Props = {\n  onChangeValue: Function,\n  isChecked: boolean,\n  id?: string,\n  label?: string,\n  use?: string,\n  value?: string,\n  disabled?: boolean,\n  dataTest?: string,\n  labelClassName?: string,\n};\n\nconst FBCheckbox = ({\n  onChangeValue,\n  value = '',\n  isChecked = false,\n  label = '',\n  use = 'action',\n  disabled = false,\n  id = '',\n  dataTest = '',\n  labelClassName = '',\n}: Props) => {\n  const classjss = useStyles();\n  const classes = classnames('fb-checkbox', {\n    'edit-checkbox': !disabled && use === 'edit',\n    'action-checkbox': !disabled && use === 'action',\n    'disabled-checked-checkbox': disabled && isChecked,\n    'disabled-unchecked-checkbox': disabled && !isChecked,\n  });\n  const potentialCheckboxId = id !== '' ? id : label;\n  const checkboxId = potentialCheckboxId !== '' ? potentialCheckboxId : null;\n  return (\n    <div data-test=\"checkbox\" className={`${classes} ${classjss.checkbox}`}>\n      <input\n        type=\"checkbox\"\n        id={checkboxId}\n        data-test={dataTest || undefined}\n        onChange={disabled ? () => {} : onChangeValue}\n        value={value}\n        disabled={disabled}\n        checked={isChecked}\n      />\n      <div className=\"checkbox-overlay\">\n        {label && (\n          <label htmlFor={checkboxId} className={labelClassName || undefined}>\n            {label}\n          </label>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default FBCheckbox;\n","// @flow\n\nimport React from 'react';\nimport type { Node } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport { Collapse as RSCollapse } from 'reactstrap';\nimport classnames from 'classnames';\n\nconst useStyles = createUseStyles({\n  collapseElement: {\n    '& .disabled': { 'i.toggle-collapse': { cursor: 'default' } },\n    '& h4': { marginTop: '7px', padding: '13px 10px 10px 10px' },\n    '& i.toggle-collapse': {\n      fontSize: '2.3rem',\n      margin: '17px',\n      cursor: 'pointer',\n      marginLeft: '0',\n    },\n  },\n});\n\ntype Props = {\n  // Determines if the Collapse component is open\n  isOpen: boolean,\n  // Toggles the isOpen boolean between true and false\n  toggleCollapse: () => void,\n  // The title to display in the collapse header\n  title: Node,\n  // Anything to be rendered within the collapse\n  children: any,\n  // If true will gray out and disable */\n  disableToggle?: boolean,\n  className?: string,\n};\n\nconst Collapse = (props: Props) => {\n  const iconClasses = classnames({\n    'toggle-collapse': true,\n    fas: true,\n    'fa-caret-down': props.isOpen,\n    'fa-caret-right': !props.isOpen,\n  });\n\n  const classes = classnames(\n    `collapse-element ${props.className || ''} ${useStyles().collapseElement}`,\n    {\n      disabled: props.disableToggle,\n    }\n  );\n\n  return (\n    <div className={classes}>\n      <div className=\"d-flex\">\n        <i\n          onClick={!props.disableToggle ? props.toggleCollapse : () => {}}\n          className={iconClasses}\n        />\n        <h4>{props.title}</h4>\n      </div>\n      <RSCollapse isOpen={props.isOpen}>\n        <div>{props.children}</div>\n      </RSCollapse>\n    </div>\n  );\n};\n\nexport default Collapse;\n","// @flow\n\n/* eslint react/no-multi-comp: 0, react/prop-types: 0 */\nimport React from 'react';\nimport type { Node } from 'react';\nimport { UncontrolledTooltip } from 'reactstrap';\nimport { createUseStyles } from 'react-jss';\n\nconst typeMap = {\n  alert: `fas fa-asterisk`,\n  help: 'fa fa-question-circle',\n};\n\nconst useStyles = createUseStyles({\n  toolTip: {\n    color: 'white',\n    'background-color': 'black',\n  },\n});\n\nexport default function Example({\n  text,\n  type,\n  id,\n}: {\n  text: Node,\n  type: 'alert' | 'help',\n  id: string,\n}) {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <span\n        style={{ textDecoration: 'underline', color: 'blue' }}\n        href=\"#\"\n        id={id}\n      >\n        <i className={typeMap[type]}></i>\n      </span>\n      <UncontrolledTooltip\n        autohide={false}\n        className={classes.toolTip}\n        placement=\"top\"\n        target={id}\n      >\n        {text}\n      </UncontrolledTooltip>\n    </React.Fragment>\n  );\n}\n","// @flow\n\nimport * as React from 'react';\nimport Tooltip from '../Tooltip';\n\n// warning message if not all possibilities specified\nexport default function DependencyWarning({\n  parameters,\n}: {\n  parameters: {\n    [string]: any,\n    name?: string,\n    dependents?: Array<{\n      children: Array<string>,\n      value?: any,\n    }>,\n    type?: string,\n    enum?: Array<string | number>,\n    neighborNames?: Array<string>,\n    schema?: string,\n  },\n}) {\n  if (\n    parameters.enum &&\n    parameters.dependents &&\n    parameters.dependents.length &&\n    parameters.dependents[0].value\n  ) {\n    // get the set of defined enum values\n    const definedVals = new Set([]);\n    parameters.dependents.forEach((possibility) => {\n      if (possibility.value && possibility.value.enum)\n        possibility.value.enum.forEach((val) => definedVals.add(val));\n    });\n    const undefinedVals = [];\n    if (Array.isArray(parameters.enum))\n      parameters.enum.forEach((val) => {\n        if (!definedVals.has(val)) undefinedVals.push(val);\n      });\n    if (undefinedVals.length === 0) return null;\n    return (\n      <React.Fragment>\n        <p>\n          Warning! The following values do not have associated dependency\n          values:{' '}\n          <Tooltip\n            id={`${parameters.path}_valuewarning`}\n            type=\"help\"\n            text=\"Each possible value for a value-based dependency must be defined to work properly\"\n          />\n        </p>\n\n        <ul>\n          {undefinedVals.map((val) => (\n            <li>{val}</li>\n          ))}\n        </ul>\n      </React.Fragment>\n    );\n  }\n\n  return null;\n}\n","// @flow\n\nimport * as React from 'react';\nimport Select from 'react-select';\n\n// a field that lets you choose adjacent blocks\nexport default function CardSelector({\n  possibleChoices,\n  chosenChoices,\n  onChange,\n  placeholder,\n  path,\n}: {\n  possibleChoices: Array<string>,\n  chosenChoices: Array<string>,\n  onChange: (chosenChoices: Array<string>) => void,\n  placeholder: string,\n  path: string,\n}) {\n  return (\n    <React.Fragment>\n      <ul>\n        {chosenChoices.map((chosenChoice, index) => (\n          <li key={`${path}_neighbor_${index}`}>\n            {chosenChoice}{' '}\n            <i\n              className=\"fa fa-times\"\n              onClick={() =>\n                onChange([\n                  ...chosenChoices.slice(0, index),\n                  ...chosenChoices.slice(index + 1),\n                ])\n              }\n            />\n          </li>\n        ))}\n      </ul>\n      <Select\n        value={{\n          value: '',\n          label: '',\n        }}\n        placeholder={placeholder}\n        options={possibleChoices\n          .filter((choice) => !chosenChoices.includes(choice))\n          .map((choice) => ({\n            value: choice,\n            label: choice,\n          }))}\n        onChange={(val: any) => {\n          onChange([...chosenChoices, val.value]);\n        }}\n        className=\"card-modal-select\"\n      />\n    </React.Fragment>\n  );\n}\n","// @flow\n\nimport * as React from 'react';\nimport { Input } from 'reactstrap';\n\n// Input field corresponding to an array of values, add and remove\nexport default function CardEnumOptions({\n  initialValues,\n  names,\n  showNames,\n  onChange,\n  type,\n}: {\n  initialValues: Array<any>,\n  names?: Array<string>,\n  showNames: boolean,\n  onChange: (newEnums: Array<any>, newEnumNames?: Array<string>) => void,\n  type: string,\n}) {\n  const possibleValues = [];\n  for (let index = 0; index < initialValues.length; index += 1) {\n    const value = initialValues[index];\n    let name = `${value}`;\n    if (names && index < names.length) name = names[index];\n    possibleValues.push(\n      <div key={index} className=\"card-enum-option\">\n        <Input\n          value={value === undefined || value === null ? '' : value}\n          placeholder=\"Possible Value\"\n          key={`val-${index}`}\n          type={type === 'string' ? 'text' : 'number'}\n          onChange={(ev: any) => {\n            let newVal;\n            switch (type) {\n              case 'string':\n                newVal = ev.target.value;\n                break;\n              case 'number':\n              case 'integer':\n                newVal = parseFloat(ev.target.value);\n                if (Number.isInteger(newVal))\n                  newVal = parseInt(ev.target.value, 10);\n                if (Number.isNaN(newVal)) newVal = null;\n                break;\n              default:\n                throw new Error(`Enum called with unknown type ${type}`);\n            }\n            onChange(\n              [\n                ...initialValues.slice(0, index),\n                newVal,\n                ...initialValues.slice(index + 1),\n              ],\n              names\n            );\n          }}\n          className=\"card-text\"\n        />\n        <Input\n          value={name || ''}\n          placeholder=\"Name\"\n          key={`name-${index}`}\n          type=\"text\"\n          onChange={(ev: any) => {\n            if (names)\n              onChange(initialValues, [\n                ...names.slice(0, index),\n                ev.target.value,\n                ...names.slice(index + 1),\n              ]);\n          }}\n          className=\"card-text\"\n          style={{ display: showNames ? 'initial' : 'none' }}\n        />\n        <i\n          className=\"fa fa-trash\"\n          onClick={() => {\n            // remove this value\n            onChange(\n              [\n                ...initialValues.slice(0, index),\n                ...initialValues.slice(index + 1),\n              ],\n              names\n                ? [...names.slice(0, index), ...names.slice(index + 1)]\n                : undefined\n            );\n          }}\n        ></i>\n      </div>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <div className=\"card-enum-header\">\n        <p> Value </p>\n        <p style={{ display: showNames ? 'initial' : 'none' }}>\n          {' '}\n          Display Label{' '}\n        </p>\n      </div>\n      {possibleValues}\n      <i\n        className=\"fa fa-plus\"\n        onClick={() => {\n          // add a new dropdown option\n          onChange(\n            [...initialValues, null],\n            names ? [...names, ''] : undefined\n          );\n        }}\n      ></i>\n    </React.Fragment>\n  );\n}\n","// @flow\n\nimport * as React from 'react';\nimport { Input } from 'reactstrap';\nimport CardEnumOptions from '../CardEnumOptions';\nimport CardSelector from './CardSelector';\nimport FBCheckbox from '../checkbox/FBCheckbox';\nimport { parse } from '../utils';\n\n// handle value options for different card types\nexport default function ValueSelector({\n  possibility,\n  onChange,\n  parentEnums,\n  parentType,\n  parentName,\n  parentSchema,\n  path,\n}: {\n  possibility: {\n    children: Array<string>,\n    value: any,\n  },\n  onChange: (newPossibility: {\n    children: Array<string>,\n    value?: any,\n  }) => void,\n  parentEnums?: Array<string | number>,\n  parentType?: string,\n  parentName?: string,\n  parentSchema?: string,\n  path: string,\n}) {\n  if (possibility.value) {\n    // enum type\n    if (parentEnums) {\n      const enumType = typeof parentEnums[0] === 'number' ? 'number' : 'string';\n      if (enumType === 'string')\n        return (\n          <CardSelector\n            possibleChoices={parentEnums.map((val) => `${val}`)}\n            chosenChoices={possibility.value.enum}\n            onChange={(chosenChoices: Array<string>) =>\n              onChange({ ...possibility, value: { enum: chosenChoices } })\n            }\n            placeholder=\"Allowed value\"\n            path={path}\n          />\n        );\n      if (enumType === 'number')\n        return (\n          <CardSelector\n            possibleChoices={parentEnums.map((val) => `${val}`)}\n            chosenChoices={possibility.value.enum}\n            onChange={(chosenChoices: Array<string>) =>\n              onChange({\n                ...possibility,\n                value: {\n                  enum: chosenChoices.map((val) => Number.parseFloat(val)),\n                },\n              })\n            }\n            placeholder=\"Allowed value\"\n            path={path}\n          />\n        );\n    }\n    // check box type\n    if (parentType === 'boolean') {\n      return (\n        <FBCheckbox\n          onChangeValue={() => {\n            if (possibility.value.enum && possibility.value.enum[0]) {\n              onChange({\n                ...possibility,\n                value: { enum: [false] },\n              });\n            } else {\n              onChange({\n                ...possibility,\n                value: { enum: [true] },\n              });\n            }\n          }}\n          isChecked={possibility.value.enum && possibility.value.enum[0]}\n          label={parentName}\n        />\n      );\n    }\n    // object type\n    if (parentType === 'object') {\n      const enumArr = (possibility.value.enum: Array<any>);\n\n      return (\n        <div>\n          {enumArr.map((combination, index) => (\n            <li key={`${path}_possibleValue${index}`}>\n              {Object.keys(combination).map((key) => {\n                const val = combination[key];\n                return (\n                  <React.Fragment>\n                    <h5>{key}:</h5>\n                    {\n                      {\n                        string: (\n                          <Input\n                            value={val || ''}\n                            placeholder=\"String value\"\n                            type=\"string\"\n                            onChange={(ev: any) => {\n                              const newVal = ev.target.value;\n                              const oldCombo = possibility.value.enum[index];\n                              onChange({\n                                ...possibility,\n                                value: {\n                                  enum: [\n                                    ...enumArr.slice(0, index),\n                                    { ...oldCombo, [key]: newVal },\n                                    ...enumArr.slice(index + 1),\n                                  ],\n                                },\n                              });\n                            }}\n                            className=\"card-modal-text\"\n                          />\n                        ),\n                        number: (\n                          <Input\n                            value={val || ''}\n                            placeholder=\"Number value\"\n                            type=\"number\"\n                            onChange={(ev: any) => {\n                              const newVal = Number.parseFloat(ev.target.value);\n                              const oldCombo = possibility.value.enum[index];\n                              onChange({\n                                ...possibility,\n                                value: {\n                                  enum: [\n                                    ...enumArr.slice(0, index),\n                                    { ...oldCombo, [key]: newVal },\n                                    ...enumArr.slice(index + 1),\n                                  ],\n                                },\n                              });\n                            }}\n                            className=\"card-modal-number\"\n                          />\n                        ),\n                        array: (\n                          <Input\n                            value={JSON.stringify(val) || ''}\n                            placeholder=\"Array in JSON\"\n                            type=\"string\"\n                            onChange={(ev: any) => {\n                              let newVal = val;\n                              try {\n                                newVal = JSON.parse(ev.target.value);\n                              } catch (error) {\n                                // eslint-disable-next-line no-console\n                                console.error('invalid JSON array input');\n                              }\n                              const oldCombo = possibility.value.enum[index];\n                              onChange({\n                                ...possibility,\n                                value: {\n                                  enum: [\n                                    ...enumArr.slice(0, index),\n                                    { ...oldCombo, [key]: newVal },\n                                    ...enumArr.slice(index + 1),\n                                  ],\n                                },\n                              });\n                            }}\n                            className=\"card-modal-text\"\n                          />\n                        ),\n                        object: (\n                          <Input\n                            value={JSON.stringify(val) || ''}\n                            placeholder=\"Object in JSON\"\n                            type=\"string\"\n                            onChange={(ev: any) => {\n                              let newVal = val;\n                              try {\n                                newVal = JSON.parse(ev.target.value);\n                              } catch (error) {\n                                // eslint-disable-next-line no-console\n                                console.error('invalid JSON object input');\n                              }\n                              const oldCombo = possibility.value.enum[index];\n                              onChange({\n                                ...possibility,\n                                value: {\n                                  enum: [\n                                    ...enumArr.slice(0, index),\n                                    { ...oldCombo, [key]: newVal },\n                                    ...enumArr.slice(index + 1),\n                                  ],\n                                },\n                              });\n                            }}\n                            className=\"card-modal-text\"\n                          />\n                        ),\n                      }[typeof val]\n                    }\n                  </React.Fragment>\n                );\n              })}\n              <i\n                className=\"fa fa-times\"\n                onClick={() =>\n                  onChange({\n                    ...possibility,\n                    value: {\n                      enum: [\n                        ...enumArr.slice(0, index),\n                        ...enumArr.slice(index + 1),\n                      ],\n                    },\n                  })\n                }\n              />\n            </li>\n          ))}\n          <i\n            className=\"fa fa-plus\"\n            onClick={() => {\n              const newCase = {};\n              const propArr = parentSchema\n                ? (parse(parentSchema, 'yaml'): any).properties\n                : {};\n              Object.keys(propArr).forEach((key) => {\n                if (\n                  propArr[key].type === 'number' ||\n                  propArr[key].type === 'integer'\n                ) {\n                  newCase[key] = 0;\n                } else if (propArr[key].type === 'array' || propArr[key].enum) {\n                  newCase[key] = [];\n                } else if (\n                  propArr[key].type === 'object' ||\n                  propArr[key].properties\n                ) {\n                  newCase[key] = {};\n                } else {\n                  newCase[key] = '';\n                }\n              });\n              onChange({\n                ...possibility,\n                value: { enum: [...enumArr, newCase] },\n              });\n            }}\n          />\n        </div>\n      );\n    }\n    return (\n      <CardEnumOptions\n        initialValues={possibility.value.enum}\n        onChange={(newEnum: Array<any>) =>\n          onChange({ ...possibility, value: { enum: newEnum } })\n        }\n        type={parentType || 'string'}\n        showNames={false}\n      />\n    );\n  } else {\n    return <h5> Appear if defined </h5>;\n  }\n}\n","// @flow\n\nimport * as React from 'react';\nimport Tooltip from '../Tooltip';\nimport CardSelector from './CardSelector';\nimport ValueSelector from './ValueSelector';\n\n// a possible dependency\nexport default function DependencyPossibility({\n  possibility,\n  neighborNames,\n  path,\n  onChange,\n  onDelete,\n  parentEnums,\n  parentType,\n  parentName,\n  parentSchema,\n}: {\n  possibility: {\n    children: Array<string>,\n    value?: any,\n  },\n  neighborNames: Array<string>,\n  path: string,\n  onChange: (newPossibility: {\n    children: Array<string>,\n    value?: any,\n  }) => void,\n  onDelete: () => void,\n  parentEnums?: Array<string | number>,\n  parentType?: string,\n  parentName?: string,\n  parentSchema?: string,\n}) {\n  return (\n    <div className=\"form-dependency-condition\">\n      <h5>\n        Display the following:{' '}\n        <Tooltip\n          id={`${path}_bulk`}\n          type=\"help\"\n          text=\"Choose the other form elements that depend on this one\"\n        />\n      </h5>\n      <CardSelector\n        possibleChoices={\n          neighborNames.filter((name) => name !== parentName) || []\n        }\n        chosenChoices={possibility.children}\n        onChange={(chosenChoices: Array<string>) =>\n          onChange({ ...possibility, children: [...chosenChoices] })\n        }\n        placeholder={'Choose a dependent...'}\n        path={path}\n      />\n      <h5>\n        If '{parentName}'' has {possibility.value ? 'the value:' : 'a value.'}\n      </h5>\n      <div style={{ display: possibility.value ? 'initial' : 'none' }}>\n        <br />\n        <ValueSelector\n          possibility={possibility}\n          onChange={(newPossibility: {\n            children: Array<string>,\n            value?: any,\n          }) => onChange(newPossibility)}\n          parentEnums={parentEnums}\n          parentType={parentType}\n          parentName={parentName}\n          parentSchema={parentSchema}\n          path={path}\n        />\n      </div>\n      <br />\n      <i className=\"fa fa-times\" onClick={() => onDelete()} />\n    </div>\n  );\n}\n","// @flow\n\nimport * as React from 'react';\nimport { UncontrolledTooltip } from 'reactstrap';\nimport { createUseStyles } from 'react-jss';\nimport FBRadioGroup from '../radio/FBRadioGroup';\nimport Tooltip from '../Tooltip';\nimport DependencyWarning from './DependencyWarning';\nimport DependencyPossibility from './DependencyPossibility';\n\nconst useStyles = createUseStyles({\n  dependencyField: {\n    '& i': { cursor: 'pointer' },\n    '& .fa-plus': { marginLeft: '1em' },\n    '& h5': { fontSize: '1em' },\n    '& .form-dependency-select': { fontSize: '0.75em', marginBottom: '1em' },\n    '& .form-dependency-conditions': {\n      textAlign: 'left',\n      '& .form-dependency-condition': {\n        padding: '1em',\n        border: '1px solid gray',\n        borderRadius: '4px',\n        margin: '1em',\n        '& *': { textAlign: 'initial' },\n        '& .card-enum-option': {\n          'display': 'flex',\n          'flex-direction': 'row',\n          '& input': {\n            'width': '80%',\n            marginRight: '1em',\n            marginBottom: '0.5em',\n          },\n        },\n      },\n    },\n    '& p': { fontSize: '0.75em' },\n    '& .fb-radio-button': {\n      display: 'block',\n    },\n  },\n});\n\n// checks whether an array corresponds to oneOf dependencies\nfunction checkIfValueBasedDependency(\n  dependents: Array<{\n    children: Array<string>,\n    value?: any,\n  }>\n) {\n  let valueBased = true;\n  if (dependents && Array.isArray(dependents) && dependents.length > 0) {\n    dependents.forEach((possibility) => {\n      if (!possibility.value || !possibility.value.enum) {\n        valueBased = false;\n      }\n    });\n  } else {\n    valueBased = false;\n  }\n\n  return valueBased;\n}\n\ntype DependencyParams = {\n  [string]: any,\n  name?: string,\n  dependents?: Array<{\n    children: Array<string>,\n    value?: any,\n  }>,\n  type?: string,\n  enum?: Array<string | number>,\n  neighborNames?: Array<string>,\n  schema?: string,\n};\n\nexport default function DependencyField({\n  parameters,\n  onChange,\n}: {\n  parameters: DependencyParams,\n  onChange: (newParams: DependencyParams) => void,\n}) {\n  const classes = useStyles();\n  const valueBased = checkIfValueBasedDependency(parameters.dependents || []);\n  return (\n    <div className={`form-dependency ${classes.dependencyField}`}>\n      <h3>\n        Dependencies{' '}\n        <Tooltip\n          id={`${parameters.path}_dependent`}\n          type=\"help\"\n          text=\"Control whether other form elements show based on this one\"\n        />\n      </h3>\n      {!!parameters.dependents && parameters.dependents.length > 0 && (\n        <React.Fragment>\n          <FBRadioGroup\n            defaultValue={valueBased ? 'value' : 'definition'}\n            horizontal={false}\n            options={[\n              {\n                value: 'definition',\n                label: 'Any value dependency',\n              },\n              {\n                value: 'value',\n                label: 'Specific value dependency',\n              },\n            ]}\n            onChange={(selection) => {\n              if (parameters.dependents) {\n                const newDependents = [...parameters.dependents];\n                if (selection === 'definition') {\n                  parameters.dependents.forEach((possibility, index) => {\n                    newDependents[index] = {\n                      ...possibility,\n                      value: undefined,\n                    };\n                  });\n                } else {\n                  parameters.dependents.forEach((possibility, index) => {\n                    newDependents[index] = {\n                      ...possibility,\n                      value: { enum: [] },\n                    };\n                  });\n                }\n                onChange({\n                  ...parameters,\n                  dependents: newDependents,\n                });\n              }\n            }}\n          />\n          <Tooltip\n            id={`${parameters.path}_valuebased`}\n            type=\"help\"\n            text=\"Specify whether these elements should show based on this element's value\"\n          />{' '}\n        </React.Fragment>\n      )}\n      <DependencyWarning parameters={parameters} />\n      <div className=\"form-dependency-conditions\">\n        {parameters.dependents\n          ? parameters.dependents.map((possibility, index) => (\n              <DependencyPossibility\n                possibility={possibility}\n                neighborNames={parameters.neighborNames || []}\n                parentEnums={parameters.enum}\n                parentType={parameters.type}\n                parentName={parameters.name}\n                parentSchema={parameters.schema}\n                path={parameters.path}\n                key={`${parameters.path}_possibility${index}`}\n                onChange={(newPossibility: {\n                  children: Array<string>,\n                  value?: any,\n                }) => {\n                  const newDependents = parameters.dependents\n                    ? [...parameters.dependents]\n                    : [];\n                  newDependents[index] = newPossibility;\n                  onChange({\n                    ...parameters,\n                    dependents: newDependents,\n                  });\n                }}\n                onDelete={() => {\n                  const newDependents = parameters.dependents\n                    ? [...parameters.dependents]\n                    : [];\n                  onChange({\n                    ...parameters,\n                    dependents: [\n                      ...newDependents.slice(0, index),\n                      ...newDependents.slice(index + 1),\n                    ],\n                  });\n                }}\n              />\n            ))\n          : ''}\n\n        <i\n          className=\"fa fa-plus\"\n          id={`${parameters.path}_adddependency`}\n          onClick={() => {\n            const newDependents = parameters.dependents\n              ? [...parameters.dependents]\n              : [];\n            newDependents.push({\n              children: [],\n              value: valueBased ? { enum: [] } : undefined,\n            });\n            onChange({\n              ...parameters,\n              dependents: newDependents,\n            });\n          }}\n        />\n        <UncontrolledTooltip\n          placement=\"top\"\n          target={`${parameters.path}_adddependency`}\n        >\n          Add another dependency relation linking this element and other form\n          elements\n        </UncontrolledTooltip>\n      </div>\n    </div>\n  );\n}\n","// @flow\n\nimport * as React from 'react';\nimport { Modal, ModalHeader, Button, ModalBody, ModalFooter } from 'reactstrap';\nimport { createUseStyles } from 'react-jss';\nimport DependencyField from './dependencies/DependencyField';\nimport type { Parameters } from './types';\n\nconst useStyles = createUseStyles({\n  cardModal: {\n    '& .card-modal-entries': { padding: '1em' },\n    '& h4, h5, p, label, li': { fontSize: '14px', marginBottom: '0' },\n    '& h3': { fontSize: '16px' },\n    '& > input': { marginBottom: '1em', height: '32px' },\n    '& .fa-question-circle': { color: 'var(--gray)' },\n    '& .card-modal-boolean': {\n      '& *': { marginRight: '0.25em', height: 'auto', display: 'inline-block' },\n    },\n    '& .card-modal-select': {\n      '& input': { margin: '0', height: '20px' },\n      marginBottom: '1em',\n    },\n  },\n});\n\nexport default function CardModal({\n  componentProps,\n  onChange,\n  isOpen,\n  onClose,\n  TypeSpecificParameters,\n}: {\n  componentProps: {\n    [string]: any,\n  },\n  onChange: (any) => void,\n  isOpen: boolean,\n  onClose: () => void,\n  TypeSpecificParameters: React.AbstractComponent<{\n    parameters: Parameters,\n    onChange: (newParams: Parameters) => void,\n  }>,\n}) {\n  const classes = useStyles();\n  // assign state values for parameters that should only change on hitting \"Save\"\n  const [componentPropsState, setComponentProps] = React.useState(\n    componentProps\n  );\n\n  React.useEffect(() => {\n    setComponentProps(componentProps);\n  }, [componentProps]);\n\n  return (\n    <Modal isOpen={isOpen} data-test=\"card-modal\" className={classes.cardModal}>\n      <ModalHeader className=\"card-modal-header\">\n        <div style={{ display: componentProps.hideKey ? 'none' : 'initial' }}>\n          <h5>Additional Settings</h5>\n        </div>\n      </ModalHeader>\n      <ModalBody className=\"card-modal-entries\">\n        <TypeSpecificParameters\n          parameters={componentPropsState}\n          onChange={(newState: any) => {\n            setComponentProps({\n              ...componentPropsState,\n              ...newState,\n            });\n          }}\n        />\n        <DependencyField\n          parameters={(componentPropsState: { [string]: any })}\n          onChange={(newState: any) => {\n            setComponentProps({\n              ...componentPropsState,\n              ...newState,\n            });\n          }}\n        />\n      </ModalBody>\n      <ModalFooter>\n        <Button\n          onClick={() => {\n            onClose();\n            onChange(componentPropsState);\n          }}\n          color=\"primary\"\n        >\n          Save\n        </Button>\n        <Button\n          onClick={() => {\n            onClose();\n          }}\n          color=\"secondary\"\n        >\n          Cancel\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n}\n","// @flow\n\nimport * as React from 'react';\nimport { getCardBody } from './utils';\nimport type { Parameters, Mods } from './types';\n\n// specify the inputs required for any type of object\nexport default function GeneralParameterInputs({\n  category,\n  parameters,\n  onChange,\n  mods,\n}: {\n  category: string,\n  parameters: Parameters,\n  onChange: (newParams: Parameters) => void,\n  mods?: Mods,\n}) {\n  return (\n    <div>{getCardBody(category, mods)({ parameters, onChange, mods })}</div>\n  );\n}\n","// @flow\nimport * as React from 'react';\nimport { safeLoad as yamlParse, safeDump as yamlStringify } from 'js-yaml';\nimport Card from './Card';\nimport Section from './Section';\nimport DEFAULT_FORM_INPUTS from './defaults/defaultFormInputs';\nimport type { CardProps, ElementProps, Mods } from './types';\n\n// parse in either YAML or JSON\nexport function parse(text: string, language: string) {\n  if (!text) return {};\n  return language === 'yaml' ? (yamlParse(text): any) : (JSON.parse(text): any);\n}\n\n// stringify in either YAML or JSON\nexport function stringify(obj: any, language: string) {\n  if (!obj) return '';\n  return language === 'yaml'\n    ? yamlStringify(obj, { skipInvalid: true })\n    : JSON.stringify(obj, null, 5);\n}\n\nfunction getDefaultFormInputsWithMods(mods?: Mods) {\n  return {\n    ...DEFAULT_FORM_INPUTS,\n    ...(mods && mods.customFormInputs),\n  };\n}\n\nexport function defaultDataProps(category: string, mods?: Mods) {\n  const allFormInputs = getDefaultFormInputsWithMods(mods);\n  return allFormInputs[category].defaultDataSchema;\n}\n\nexport function defaultUiProps(category: string, mods?: Mods) {\n  const allFormInputs = getDefaultFormInputsWithMods(mods);\n  return allFormInputs[category].defaultUiSchema;\n}\nexport function categoryType(category: string, mods?: Mods) {\n  const allFormInputs = getDefaultFormInputsWithMods(mods);\n  return allFormInputs[category].type;\n}\nexport function getCardBody(category: string, mods?: Mods) {\n  const allFormInputs = getDefaultFormInputsWithMods(mods);\n  return allFormInputs[category].cardBody;\n}\nexport function categoryToNameMap(category: string, mods?: Mods) {\n  const allFormInputs = getDefaultFormInputsWithMods(mods);\n  const categoryNameMap = {};\n  Object.keys(allFormInputs).forEach((inputName) => {\n    categoryNameMap[inputName] = allFormInputs[inputName].displayName;\n  });\n  return categoryNameMap;\n}\n\nfunction updateElementNames(elementArray: Array<ElementProps>) {\n  const elementNames = elementArray.map((elem) => elem.name);\n  return elementArray.map((elem) => {\n    const newElem = elem;\n    newElem.neighborNames = elementNames;\n    return newElem;\n  });\n}\n\nexport function generateCategoryHash(mods?: Mods) {\n  // merge the defaults and mods' form inputs\n  const allFormInputs = getDefaultFormInputsWithMods(mods);\n\n  const categoryHash = {};\n  Object.keys(allFormInputs).forEach((categoryName) => {\n    const formInput = allFormInputs[categoryName];\n    formInput.matchIf.forEach((match) => {\n      match.types.forEach((type) => {\n        const hash = `type:${type || ''};widget:${match.widget || ''};field:${\n          match.field || ''\n        };format:${match.format || ''};$ref:${\n          match.$ref ? 'true' : 'false'\n        };enum:${match.enum ? 'true' : 'false'}`;\n        if (categoryHash[hash]) {\n          throw new Error(`Duplicate hash: ${hash}`);\n        }\n        categoryHash[hash] = categoryName;\n      });\n    });\n  });\n\n  return categoryHash;\n}\n\n// determines a card's category based on it's properties\n// mostly useful for reading a schema for the first time\nexport function getCardCategory(\n  cardProps: CardProps,\n  categoryHash: { [string]: string }\n) {\n  const currentHash = `type:${cardProps.dataOptions.type || ''};widget:${\n    cardProps.uiOptions['ui:widget'] || ''\n  };field:${cardProps.uiOptions['ui:field'] || ''};format:${\n    cardProps.dataOptions.format || ''\n  };$ref:${cardProps.$ref !== undefined ? 'true' : 'false'};enum:${\n    cardProps.dataOptions.enum ? 'true' : 'false'\n  }`;\n  const category = categoryHash[currentHash];\n  if (!category) {\n    if (cardProps.$ref) return 'ref';\n    // eslint-disable-next-line no-console\n    console.error(`No match for card': ${currentHash} among set`);\n    return 'shortAnswer';\n  }\n  return category;\n}\n\n// check for unsupported feature in schema and uischema\nconst supportedPropertyParameters = new Set([\n  'title',\n  'description',\n  'enum',\n  'minLength',\n  'maxLength',\n  'multipleOf',\n  'minimum',\n  'maximum',\n  'format',\n  'exclusiveMinimum',\n  'exclusiveMaximum',\n  'type',\n  'default',\n  'pattern',\n  'required',\n  'properties',\n  'items',\n  'definitions',\n  '$ref',\n  'minItems',\n  'maxItems',\n  'enumNames',\n  'dependencies',\n  '$id',\n]);\n\nconst supportedUiParameters = new Set([\n  'ui:order',\n  'ui:widget',\n  'ui:autofocus',\n  'ui:autocomplete',\n  'ui:option',\n  'ui:field',\n  'items',\n  'definitions',\n]);\n\n// recursively called function to check an object for unsupported features\nfunction checkObjectForUnsupportedFeatures(\n  schema: { [string]: any },\n  uischema: { [string]: any },\n  supportedWidgets: Set<string>,\n  supportedFields: Set<string>,\n  supportedOptions: Set<string>\n) {\n  // add each unsupported feature to this array\n  const unsupportedFeatures = [];\n\n  // check for unsupported whole object features\n  if (schema && typeof schema === 'object')\n    Object.keys(schema).forEach((property) => {\n      if (\n        !supportedPropertyParameters.has(property) &&\n        property !== 'properties'\n      )\n        unsupportedFeatures.push(`Unrecognized Object Property: ${property}`);\n    });\n\n  if (uischema && typeof uischema === 'object')\n    Object.keys(uischema).forEach((uiProperty) => {\n      let propDefined = false;\n      // search for the property in the schema properties and dependencies\n      if (\n        schema.properties &&\n        Object.keys(schema.properties).includes(uiProperty)\n      )\n        propDefined = true;\n      if (schema.dependencies) {\n        Object.keys(schema.dependencies).forEach((dependencyKey) => {\n          Object.keys(schema.dependencies[dependencyKey]).forEach(\n            (parameter) => {\n              if (parameter === 'oneOf') {\n                schema.dependencies[dependencyKey].oneOf.forEach((grouping) => {\n                  if (grouping.properties)\n                    if (Object.keys(grouping.properties).includes(uiProperty))\n                      propDefined = true;\n                });\n              } else if (parameter === 'properties') {\n                if (\n                  Object.keys(\n                    schema.dependencies[dependencyKey].properties\n                  ).includes(uiProperty)\n                )\n                  propDefined = true;\n              }\n            }\n          );\n        });\n      }\n\n      if (!propDefined && !supportedUiParameters.has(uiProperty))\n        unsupportedFeatures.push(\n          `Unrecognized UI schema property: ${uiProperty}`\n        );\n    });\n\n  // check for unsupported property parameters\n  if (schema.properties)\n    Object.entries(schema.properties).forEach(\n      ([parameter, element]: [string, any]) => {\n        const correctName = parameter.replace(/\\W/g, '_');\n        if (parameter !== correctName) {\n          unsupportedFeatures.push(\n            `Improper name '${parameter}': using '${correctName}' instead`\n          );\n        }\n        if (\n          element &&\n          typeof element === 'object' &&\n          element.type &&\n          element.type !== 'object'\n        ) {\n          // make sure that the type is valid\n          if (\n            !['array', 'string', 'integer', 'number', 'boolean'].includes(\n              element.type\n            )\n          )\n            unsupportedFeatures.push(\n              `Unrecognized type: ${element.type} in ${parameter}`\n            );\n          // check the properties of each property if it is a basic object\n          Object.keys(element).forEach((key) => {\n            if (!supportedPropertyParameters.has(key))\n              unsupportedFeatures.push(\n                `Property Parameter: ${key} in ${parameter}`\n              );\n          });\n        } else {\n          // check the properties of each property if it is a basic object\n          Object.keys(element).forEach((key) => {\n            if (!supportedPropertyParameters.has(key))\n              unsupportedFeatures.push(\n                `Property Parameter: ${key} in ${parameter}`\n              );\n          });\n        }\n\n        // check for unsupported UI components\n        if (\n          uischema &&\n          uischema[parameter] &&\n          element &&\n          (!element.type || element.type !== 'object')\n        ) {\n          // check for unsupported ui properties\n          Object.keys(uischema[parameter]).forEach((uiProp) => {\n            if (!supportedUiParameters.has(uiProp))\n              unsupportedFeatures.push(\n                `UI Property: ${uiProp} for ${parameter}`\n              );\n\n            // check for unsupported ui widgets\n            if (\n              uiProp === 'ui:widget' &&\n              !supportedWidgets.has(uischema[parameter][uiProp])\n            ) {\n              unsupportedFeatures.push(\n                `UI Widget: ${uischema[parameter][uiProp]} for ${parameter}`\n              );\n            }\n\n            // check for unsupported ui fields\n            if (\n              uiProp === 'ui:field' &&\n              !supportedFields.has(uischema[parameter][uiProp])\n            )\n              unsupportedFeatures.push(\n                `UI Field: ${uischema[parameter][uiProp]} for ${parameter}`\n              );\n\n            // check unsupported ui option\n            if (uiProp === 'ui:option')\n              Object.keys(uischema[parameter]['ui:option']).forEach(\n                (uiOption) => {\n                  if (!supportedOptions.has(uiOption))\n                    unsupportedFeatures.push(\n                      `UI Property: ui:option.${uiOption} for ${parameter}`\n                    );\n                }\n              );\n          });\n        }\n      }\n    );\n  return unsupportedFeatures;\n}\n\n// parent function that checks for unsupported features in an entire document\nexport function checkForUnsupportedFeatures(\n  schema: { [string]: any },\n  uischema: { [string]: any },\n  mods?: Mods\n) {\n  // add each unsupported feature to this array\n  const unsupportedFeatures = [];\n\n  // generate list of supported widgets, fields, options\n  const allFormInputs = getDefaultFormInputsWithMods(mods);\n\n  const widgets = [];\n  const fields = [];\n  const options = [];\n  Object.keys(allFormInputs).forEach((inputType) => {\n    allFormInputs[inputType].matchIf.forEach((match) => {\n      if (match.widget && !widgets.includes(match.widget))\n        widgets.push(match.widget);\n      if (match.field && !fields.includes(match.field))\n        fields.push(match.field);\n    });\n    if (\n      allFormInputs[inputType].possibleOptions &&\n      Array.isArray(allFormInputs[inputType].possibleOptions)\n    ) {\n      options.push(...allFormInputs[inputType].possibleOptions);\n    }\n  });\n  const supportedWidgets = new Set(widgets);\n  const supportedFields = new Set(fields);\n  const supportedOptions = new Set(options);\n\n  // check for unsupported whole form features\n  if (schema && typeof schema === 'object' && schema.type === 'object') {\n    unsupportedFeatures.push(\n      ...checkObjectForUnsupportedFeatures(\n        schema,\n        uischema,\n        supportedWidgets,\n        supportedFields,\n        supportedOptions\n      )\n    );\n  } else {\n    unsupportedFeatures.push('jsonSchema form is not of type object');\n  }\n\n  return unsupportedFeatures;\n}\n\n// make an element out of the corresponding properties and UI properties\nfunction generateElement(\n  name: string,\n  dataProps: any,\n  uiProperties: any,\n  requiredNames: any,\n  definitionData?: { [string]: any },\n  definitionUi?: { [string]: any },\n  categoryHash: { [string]: string }\n) {\n  let uiProps = {\n    ...uiProperties,\n  };\n  const newElement = {};\n  let elementDetails =\n    dataProps && typeof dataProps === 'object' ? dataProps : {};\n\n  // populate newElement with reference if applicable\n  if (elementDetails.$ref !== undefined && definitionData) {\n    const pathArr =\n      typeof elementDetails.$ref === 'string'\n        ? elementDetails.$ref.split('/')\n        : [];\n    if (\n      pathArr[0] === '#' &&\n      pathArr[1] === 'definitions' &&\n      definitionData[pathArr[2]]\n    ) {\n      elementDetails = {\n        ...elementDetails,\n        ...definitionData[pathArr[2]],\n      };\n    }\n\n    const definedUiProps = (definitionUi || {})[pathArr[2]];\n    uiProps = {\n      ...(definedUiProps || {}),\n      ...uiProps,\n    };\n  }\n\n  newElement.name = name;\n  newElement.required = requiredNames.includes(name);\n  newElement.$ref =\n    typeof elementDetails.$ref === 'string' ? elementDetails.$ref : undefined;\n\n  if (elementDetails.type && elementDetails.type === 'object') {\n    // create a section\n    newElement.schema = elementDetails;\n    newElement.uischema = uiProps || {};\n    newElement.propType = 'section';\n  } else {\n    // create a card\n    newElement.dataOptions = elementDetails;\n    newElement.uiOptions = uiProps || {};\n\n    // ensure that uiOptions does not have duplicate keys with dataOptions\n    const reservedKeys = Object.keys(newElement.dataOptions);\n    Object.keys(newElement.uiOptions).forEach((uiKey) => {\n      if (reservedKeys.includes(uiKey)) {\n        newElement.uiOptions[`ui:*${uiKey}`] = newElement.uiOptions[uiKey];\n      }\n    });\n\n    newElement.dataOptions.category = getCardCategory(newElement, categoryHash);\n    newElement.propType = 'card';\n  }\n  return newElement;\n}\n\n// generate an array of element objects from a schema and uischema\nexport function generateElementPropsFromSchemas(parameters: {\n  schema: { [string]: any },\n  uischema: { [string]: any },\n  definitionData?: { [string]: any },\n  definitionUi?: { [string]: any },\n  categoryHash: { [string]: string },\n}) {\n  const {\n    schema,\n    uischema,\n    definitionData,\n    definitionUi,\n    categoryHash,\n  } = parameters;\n\n  if (!schema.properties) return [];\n\n  const elementDict = {};\n  const requiredNames = schema.required ? schema.required : [];\n\n  // read regular elements from properties\n  Object.entries(schema.properties).forEach(([parameter, element]) => {\n    const newElement = {};\n    let elementDetails =\n      element && typeof element === 'object'\n        ? (element: {\n            ...any,\n            $ref?: string,\n          })\n        : {};\n\n    // populate newElement with reference if applicable\n    if (elementDetails.$ref !== undefined && definitionData) {\n      if (\n        elementDetails.$ref &&\n        !elementDetails.$ref.startsWith('#/definitions')\n      )\n        throw new Error(\n          `Invalid definition, not at '#/definitions': ${elementDetails.$ref}`\n        );\n      const pathArr =\n        elementDetails.$ref !== undefined ? elementDetails.$ref.split('/') : [];\n      if (\n        pathArr[0] === '#' &&\n        pathArr[1] === 'definitions' &&\n        definitionData[pathArr[2]]\n      ) {\n        elementDetails = {\n          ...elementDetails,\n          ...definitionData[pathArr[2]],\n        };\n      }\n\n      const definedUiProps = (definitionUi || {})[pathArr[2]];\n      uischema[parameter] = {\n        ...(definedUiProps || {}),\n        ...uischema[parameter],\n      };\n    }\n\n    newElement.name = parameter;\n    newElement.required = requiredNames.includes(parameter);\n    newElement.$ref = elementDetails.$ref;\n\n    if (elementDetails.type && elementDetails.type === 'object') {\n      // create a section\n      newElement.schema = elementDetails;\n      newElement.uischema = uischema[parameter] || {};\n      newElement.propType = 'section';\n    } else {\n      // create a card\n      newElement.dataOptions = elementDetails;\n      newElement.uiOptions = uischema[parameter] || {};\n\n      // ensure that uiOptions does not have duplicate keys with dataOptions\n      const reservedKeys = Object.keys(newElement.dataOptions);\n      Object.keys(newElement.uiOptions).forEach((uiKey) => {\n        if (reservedKeys.includes(uiKey)) {\n          newElement.uiOptions[`ui:*${uiKey}`] = newElement.uiOptions[uiKey];\n        }\n      });\n\n      newElement.dataOptions.category = getCardCategory(\n        newElement,\n        categoryHash\n      );\n      newElement.propType = 'card';\n    }\n    elementDict[newElement.name] = newElement;\n  });\n  // read dependent elements from dependencies\n  if (schema.dependencies) {\n    Object.keys(schema.dependencies).forEach((parent) => {\n      const group = schema.dependencies[parent];\n      if (group.oneOf) {\n        let possibilityIndex = 0;\n        group.oneOf.forEach((possibility) => {\n          if (!elementDict[parent].dependents) {\n            elementDict[parent].dependents = [];\n          }\n          elementDict[parent].dependents.push({\n            children: [],\n            value: possibility.properties[parent],\n          });\n          const requiredValues = possibility.required || [];\n          Object.entries(possibility.properties).forEach(\n            ([parameter, element]) => {\n              // create a new element if not present in main properties\n              if (!Object.keys(elementDict).includes(parameter)) {\n                const newElement = generateElement(\n                  parameter,\n                  element,\n                  uischema[parameter],\n                  requiredNames,\n                  definitionData,\n                  definitionUi,\n                  categoryHash\n                );\n                newElement.required = requiredValues.includes(newElement.name);\n                elementDict[newElement.name] = newElement;\n              }\n              if (parameter !== parent) {\n                const newElement = elementDict[parameter];\n                newElement.dependent = true;\n                newElement.parent = parent;\n                elementDict[parent].dependents[possibilityIndex].children.push(\n                  parameter\n                );\n              }\n            }\n          );\n          possibilityIndex += 1;\n        });\n      } else if (group.properties) {\n        const requiredValues = group.required || [];\n        Object.entries(group.properties).forEach(([parameter, element]) => {\n          const newElement = generateElement(\n            parameter,\n            element,\n            uischema[parameter],\n            requiredNames,\n            definitionData,\n            definitionUi,\n            categoryHash\n          );\n          newElement.required = requiredValues.includes(newElement.name);\n          newElement.dependent = true;\n          newElement.parent = parent;\n          elementDict[newElement.name] = newElement;\n          if (elementDict[parent].dependents) {\n            elementDict[parent].dependents[0].children.push(parameter);\n          } else {\n            elementDict[parent].dependents = [{ children: [parameter] }];\n          }\n        });\n      } else {\n        // eslint-disable-next-line no-console\n        console.error('unsupported dependency type encountered');\n      }\n    });\n  }\n\n  // now reorder in accordance with ui:order if defined\n  const cardPropList = [];\n  if (uischema['ui:order']) {\n    // in case there are any options not in ui:order\n    const remainder = [];\n    Object.keys(elementDict).forEach((name) => {\n      if (!uischema['ui:order'].includes(name))\n        remainder.push(elementDict[name]);\n    });\n\n    // map ui order elements into the right order\n    uischema['ui:order'].forEach((name) => {\n      // if contains the wildcard *, insert remainder cards there\n      if (name === '*') {\n        remainder.forEach((remCard) => {\n          cardPropList.push(remCard);\n        });\n      } else if (elementDict[name]) {\n        cardPropList.push(elementDict[name]);\n      }\n    });\n  } else {\n    Object.keys(elementDict).forEach((name) => {\n      cardPropList.push(elementDict[name]);\n    });\n  }\n\n  updateElementNames(cardPropList);\n  return (cardPropList: Array<ElementProps>);\n}\n\n// determine the number of element objects from schema and uischema\nexport function countElementsFromSchema(schemaData: any) {\n  if (!schemaData.properties) return 0;\n  const elementDict = {};\n  let elementCount = 0;\n\n  // read regular elements from properties\n  Object.entries(schemaData.properties).forEach(([parameter]) => {\n    elementDict[parameter] = {};\n    elementCount += 1;\n  });\n  // read dependent elements from dependencies\n  if (schemaData.dependencies) {\n    Object.keys(schemaData.dependencies).forEach((parent) => {\n      const group = schemaData.dependencies[parent];\n      if (group.oneOf) {\n        let possibilityIndex = 0;\n        group.oneOf.forEach((possibility) => {\n          if (!elementDict[parent].dependents) {\n            elementDict[parent].dependents = [];\n          }\n          elementDict[parent].dependents.push({\n            children: [],\n            value: possibility.properties[parent],\n          });\n          Object.entries(possibility.properties).forEach(([parameter]) => {\n            // create a new element if not present in main properties\n            if (!Object.keys(elementDict).includes(parameter)) {\n              elementDict[parameter] = {};\n              elementCount += 1;\n            }\n            if (parameter !== parent) {\n              const newElement = elementDict[parameter];\n              newElement.dependent = true;\n              newElement.parent = parent;\n              elementDict[parent].dependents[possibilityIndex].children.push(\n                parameter\n              );\n            }\n          });\n          possibilityIndex += 1;\n        });\n      } else if (group.properties) {\n        Object.entries(group.properties).forEach(([parameter]) => {\n          elementDict[parameter] = {};\n          elementCount += 1;\n          if (elementDict[parent].dependents) {\n            elementDict[parent].dependents[0].children.push(parameter);\n          } else {\n            elementDict[parent].dependents = [{ children: [parameter] }];\n          }\n        });\n      } else {\n        // eslint-disable-next-line no-console\n        console.error('unsupported dependency type encountered');\n      }\n    });\n  }\n\n  return (elementCount: number);\n}\n\n// convert an element into a schema equivalent\nfunction generateSchemaElementFromElement(element: ElementProps) {\n  if (element.$ref !== undefined) {\n    return {\n      $ref: element.$ref,\n    };\n  } else if (element.propType === 'card') {\n    if (element.dataOptions.category === 'section') {\n      return {\n        type: 'object',\n      };\n    } else {\n      const prop = {};\n\n      Object.keys(element.dataOptions).forEach((key) => {\n        if (\n          ![\n            'category',\n            'hideKey',\n            'path',\n            'definitionData',\n            'definitionUi',\n            'mods',\n          ].includes(key) &&\n          element.dataOptions[key] !== ''\n        )\n          prop[key] = element.dataOptions[key];\n      });\n      return prop;\n    }\n  } else if (element.propType === 'section') {\n    return element.schema;\n  } else {\n    throw new Error('Element that is neither card, section, nor ref');\n  }\n}\n\n// generate a new schema from a complete array of card objects\nexport function generateSchemaFromElementProps(\n  elementArr: Array<ElementProps>\n) {\n  if (!elementArr) return {};\n  const newSchema = {};\n\n  const props = {};\n  const dependencies = {};\n  const elementDict = {};\n  const dependentElements = new Set([]);\n  for (let index = 0; index < elementArr.length; index += 1) {\n    const element = elementArr[index];\n    elementDict[element.name] = { ...element };\n    if (element.dependents)\n      element.dependents.forEach((possibility) => {\n        possibility.children.forEach((dependentElement) => {\n          dependentElements.add(dependentElement);\n        });\n      });\n  }\n  Object.keys(elementDict).forEach((elementName) => {\n    const element = elementDict[elementName];\n    if (element.dependents && element.dependents[0]) {\n      if (element.dependents[0].value) {\n        // handle value based case\n        dependencies[elementName] = {\n          oneOf: element.dependents.map((possibility) => {\n            const childrenComponents = {};\n            const requiredValues = [];\n            possibility.children.forEach((child) => {\n              if (elementDict[child]) {\n                childrenComponents[child] = generateSchemaElementFromElement(\n                  elementDict[child]\n                );\n                if (elementDict[child].required) requiredValues.push(child);\n              }\n            });\n            return {\n              properties: {\n                [elementName]: possibility.value,\n                ...childrenComponents,\n              },\n              required: requiredValues,\n            };\n          }),\n        };\n      } else {\n        // handle definition based case\n        const childrenComponents = {};\n        const requiredValues = [];\n        element.dependents[0].children.forEach((child) => {\n          childrenComponents[child] = generateSchemaElementFromElement(\n            elementDict[child]\n          );\n          if (elementDict[child].required) requiredValues.push(child);\n        });\n        dependencies[elementName] = {\n          properties: childrenComponents,\n          required: requiredValues,\n        };\n      }\n    }\n    if (!dependentElements.has(elementName))\n      props[element.name] = generateSchemaElementFromElement(element);\n  });\n\n  newSchema.properties = props;\n  newSchema.dependencies = dependencies;\n  newSchema.required = elementArr\n    .filter(({ required, dependent }) => required && !dependent)\n    .map<string>(({ name }) => name);\n\n  return newSchema;\n}\n\nexport function generateUiSchemaFromElementProps(\n  elementArr: Array<ElementProps>,\n  definitionUi: any\n) {\n  if (!elementArr) return {};\n\n  const uiSchema = {};\n  const uiOrder = [];\n  const definitions = definitionUi;\n\n  elementArr.forEach((element) => {\n    uiOrder.push(element.name);\n    if (element.$ref !== undefined) {\n      // look for the reference\n      const pathArr =\n        typeof element.$ref === 'string' ? element.$ref.split('/') : [];\n      if (definitions && definitions[pathArr[2]])\n        uiSchema[element.name] = definitions[pathArr[2]];\n    } else if (element.propType === 'card' && element.uiOptions) {\n      Object.keys(element.uiOptions).forEach((uiOption) => {\n        if (!uiSchema[element.name]) uiSchema[element.name] = {};\n        if (uiOption.startsWith('ui:*')) {\n          uiSchema[element.name][uiOption.substring(4)] =\n            element.uiOptions[uiOption];\n        } else {\n          uiSchema[element.name][uiOption] = element.uiOptions[uiOption];\n        }\n      });\n    } else if (element.propType === 'section' && element.uischema) {\n      uiSchema[element.name] = element.uischema;\n    }\n  });\n\n  uiSchema['ui:order'] = uiOrder;\n\n  return uiSchema;\n}\n\nexport function getCardParameterInputComponentForType(\n  category: string,\n  mods?: Mods\n) {\n  const allFormInputs = getDefaultFormInputsWithMods(mods);\n  return allFormInputs[category].modalBody;\n}\n\n// takes in an array of Card Objects and updates both schemas\nexport function updateSchemas(\n  elementArr: Array<ElementProps>,\n  parameters: {\n    schema: { [string]: any },\n    uischema: { [string]: any },\n    onChange: ({ [string]: any }, { [string]: any }) => any,\n    definitionData?: { [string]: any },\n    definitionUi?: { [string]: any },\n  }\n) {\n  const { schema, uischema, onChange, definitionUi } = parameters;\n  const definedUi = (uischema || {}).definitions\n    ? { definitions: uischema.definitions }\n    : {};\n  const newUiSchema = ({\n    ...definedUi,\n    ...generateUiSchemaFromElementProps(elementArr, definitionUi),\n  }: { [string]: any });\n  const newSchema = ({\n    ...schema,\n    ...generateSchemaFromElementProps(elementArr),\n  }: { [string]: any });\n\n  // mandate that the type is an object if not already done\n  newSchema.type = 'object';\n\n  onChange(newSchema, newUiSchema);\n}\n\n// given an initial schema, update with a new card appended\nexport function addCardObj(parameters: {\n  schema: { [string]: any },\n  uischema: { [string]: any },\n  onChange: ({ [string]: any }, { [string]: any }) => any,\n  definitionData: { [string]: any },\n  definitionUi: { [string]: any },\n  index?: number,\n  categoryHash: { [string]: string },\n}) {\n  const {\n    schema,\n    uischema,\n    onChange,\n    definitionData,\n    definitionUi,\n    index,\n    categoryHash,\n  } = parameters;\n  const newElementObjArr = generateElementPropsFromSchemas({\n    schema,\n    uischema,\n    definitionData,\n    definitionUi,\n    categoryHash,\n  });\n\n  // ensure that each added block has a unique name\n\n  const names = newElementObjArr.map((element) => element.name);\n  const i =\n    names.length > 0\n      ? Math.max(\n          ...names.map((name) =>\n            name.startsWith('newInput')\n              ? Number.parseInt(name.charAt(8), 10)\n              : 0\n          )\n        ) + 1\n      : 1;\n\n  const newElement = ({\n    name: `newInput${i}`,\n    required: false,\n    dataOptions: {\n      title: `New Input ${i}`,\n      type: 'string',\n      default: '',\n    },\n    uiOptions: {},\n    propType: 'card',\n    schema: {},\n    uischema: {},\n    neighborNames: [],\n  }: ElementProps);\n\n  if (index !== undefined && index !== null) {\n    newElementObjArr.splice(index + 1, 0, newElement);\n  } else {\n    newElementObjArr.push(newElement);\n  }\n  updateSchemas(newElementObjArr, {\n    schema,\n    uischema,\n    definitionData,\n    definitionUi,\n    onChange,\n  });\n}\n\n// given an initial schema, update with a new section appended\nexport function addSectionObj(parameters: {\n  schema: { [string]: any },\n  uischema: { [string]: any },\n  onChange: ({ [string]: any }, { [string]: any }) => any,\n  definitionData: { [string]: any },\n  definitionUi: { [string]: any },\n  index?: number,\n  categoryHash: { [string]: string },\n}) {\n  const {\n    schema,\n    uischema,\n    onChange,\n    definitionData,\n    definitionUi,\n    index,\n    categoryHash,\n  } = parameters;\n  const newElementObjArr = generateElementPropsFromSchemas({\n    schema,\n    uischema,\n    definitionData,\n    definitionUi,\n    categoryHash,\n  });\n\n  // ensure that each added block has a unique name\n  const names = newElementObjArr.map((element) => element.name);\n  const i =\n    names.length > 0\n      ? Math.max(\n          ...names.map((name) =>\n            name.startsWith('newInput')\n              ? Number.parseInt(name.charAt(8), 10)\n              : 0\n          )\n        ) + 1\n      : 1;\n\n  const newElement = ({\n    name: `newInput${i}`,\n    required: false,\n    dataOptions: {\n      title: `New Input ${i}`,\n      type: 'object',\n      default: '',\n    },\n    uiOptions: {},\n    propType: 'section',\n    schema: { title: `New Input ${i}`, type: 'object' },\n    uischema: {},\n    neighborNames: [],\n  }: ElementProps);\n\n  if (index !== undefined && index !== null) {\n    newElementObjArr.splice(index + 1, 0, newElement);\n  } else {\n    newElementObjArr.push(newElement);\n  }\n  updateSchemas(newElementObjArr, {\n    schema,\n    uischema,\n    definitionData,\n    definitionUi,\n    onChange,\n  });\n}\n\n// generate an array of Card and Section components from a schema\nexport function generateElementComponentsFromSchemas(parameters: {\n  schemaData: { [string]: any },\n  uiSchemaData: { [string]: any },\n  onChange: ({ [string]: any }, { [string]: any }) => any,\n  definitionData?: { [string]: any },\n  definitionUi?: { [string]: any },\n  hideKey?: boolean,\n  path: string,\n  cardOpenArray: Array<boolean>,\n  setCardOpenArray: (newArr: Array<boolean>) => void,\n  mods?: Mods,\n  categoryHash: { [string]: string },\n}) {\n  const {\n    schemaData,\n    uiSchemaData,\n    onChange,\n    definitionData,\n    definitionUi,\n    hideKey,\n    path,\n    cardOpenArray,\n    setCardOpenArray,\n    mods,\n    categoryHash,\n  } = parameters;\n\n  const schema = parse(stringify(schemaData, 'yaml'), 'yaml');\n  const uischema = parse(stringify(uiSchemaData, 'yaml'), 'yaml');\n\n  if (!schema.properties) return [];\n  const elementPropArr = generateElementPropsFromSchemas({\n    schema,\n    uischema,\n    definitionData,\n    definitionUi,\n    categoryHash,\n  });\n\n  const elementList = elementPropArr.map<React.Node>((elementProp, index) => {\n    const expanded =\n      (cardOpenArray && index < cardOpenArray.length && cardOpenArray[index]) ||\n      false;\n    if (elementProp.propType === 'card') {\n      // choose the appropriate type specific parameters\n      const TypeSpecificParameters = getCardParameterInputComponentForType(\n        elementProp.dataOptions.category || 'string',\n        mods\n      );\n\n      // add a fully defined card component to the list of components\n      return (\n        <Card\n          componentProps={{\n            name: elementPropArr[index].name,\n            required: elementPropArr[index].required,\n            hideKey,\n            path: `${path}_${elementPropArr[index].name}`,\n            definitionData,\n            definitionUi,\n            neighborNames: elementPropArr[index].neighborNames,\n            dependents: elementPropArr[index].dependents,\n            dependent: elementPropArr[index].dependent,\n            parent: elementPropArr[index].parent,\n            ...elementPropArr[index].uiOptions,\n            ...elementPropArr[index].dataOptions,\n          }}\n          key={`${path}_${elementPropArr[index].name}`}\n          TypeSpecificParameters={TypeSpecificParameters}\n          onChange={(newCardObj: { [string]: any }) => {\n            const newElementObjArr = generateElementPropsFromSchemas({\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              categoryHash,\n            });\n\n            // extract uiOptions and other properties\n            const newDataProps = {};\n            const newUiProps = {};\n            Object.keys(newCardObj).forEach((propName) => {\n              if (propName.startsWith('ui:')) {\n                if (propName.startsWith('ui:*')) {\n                  newUiProps[propName.substring(4)] = newCardObj[propName];\n                } else {\n                  newUiProps[propName] = newCardObj[propName];\n                }\n              } else if (\n                ![\n                  'name',\n                  'required',\n                  'lang',\n                  'neighborNames',\n                  'dependents',\n                  'dependent',\n                  'parent',\n                ].includes(propName)\n              ) {\n                newDataProps[propName] = newCardObj[propName];\n              }\n            });\n\n            if (newElementObjArr[index].propType === 'card') {\n              const oldElement = newElementObjArr[index];\n              newElementObjArr[index] = {\n                ...oldElement,\n                dataOptions: newDataProps,\n                uiOptions: newUiProps,\n                required: newCardObj.required,\n                dependents: newCardObj.dependents,\n                dependent: newCardObj.dependent,\n                parent: newCardObj.parent,\n                name: newCardObj.name,\n                $ref: newCardObj.$ref,\n                propType: 'card',\n              };\n            } else {\n              throw new Error('Card editing non card element');\n            }\n            updateSchemas(newElementObjArr, {\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              onChange,\n            });\n          }}\n          onDelete={() => {\n            // splice out this index from the card array\n            const newElementObjArr = generateElementPropsFromSchemas({\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              categoryHash,\n            });\n            newElementObjArr.splice(index, 1);\n            setCardOpenArray(cardOpenArray.splice(index, 1));\n            updateSchemas(newElementObjArr, {\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              onChange,\n            });\n          }}\n          onMoveUp={() => {\n            const newElementObjArr = generateElementPropsFromSchemas({\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              categoryHash,\n            });\n            if (index === 0) return;\n\n            const tempBlock = newElementObjArr[index - 1];\n            newElementObjArr[index - 1] = newElementObjArr[index];\n            newElementObjArr[index] = tempBlock;\n            updateSchemas(newElementObjArr, {\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              onChange,\n            });\n          }}\n          onMoveDown={() => {\n            const newElementObjArr = generateElementPropsFromSchemas({\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              categoryHash,\n            });\n            if (index === elementPropArr.length - 1) return;\n\n            const tempBlock = newElementObjArr[index + 1];\n            newElementObjArr[index + 1] = newElementObjArr[index];\n            newElementObjArr[index] = tempBlock;\n            updateSchemas(newElementObjArr, {\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              onChange,\n            });\n          }}\n          addElem={(choice: string) => {\n            if (choice === 'card') {\n              addCardObj({\n                schema,\n                uischema,\n                onChange,\n                definitionData: definitionData || {},\n                definitionUi: definitionUi || {},\n                index,\n                categoryHash,\n              });\n            } else if (choice === 'section') {\n              addSectionObj({\n                schema,\n                uischema,\n                onChange,\n                definitionData: definitionData || {},\n                definitionUi: definitionUi || {},\n                index,\n                categoryHash,\n              });\n            }\n            setCardOpenArray([...cardOpenArray, false]);\n          }}\n          cardOpen={expanded}\n          setCardOpen={(newState: boolean) =>\n            setCardOpenArray([\n              ...cardOpenArray.slice(0, index),\n              newState,\n              ...cardOpenArray.slice(index + 1),\n            ])\n          }\n          mods={mods}\n        />\n      );\n    } else if (elementProp.propType === 'section') {\n      // create a section with the appropriate schemas here\n      return (\n        <Section\n          schema={elementProp.schema}\n          uischema={elementProp.uischema}\n          onChange={(\n            newSchema: { [string]: any },\n            newUiSchema: { [string]: any },\n            newRef?: string\n          ) => {\n            const newElementObjArr = generateElementPropsFromSchemas({\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              categoryHash,\n            });\n\n            const oldSection = newElementObjArr[index];\n\n            newElementObjArr[index] = {\n              ...oldSection,\n              schema: newSchema,\n              uischema: newUiSchema,\n              propType: 'section',\n            };\n\n            if (newRef) newElementObjArr[index].$ref = newRef;\n\n            updateSchemas(newElementObjArr, {\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              onChange,\n            });\n          }}\n          onNameChange={(newName: string) => {\n            const oldSection = elementProp;\n\n            // check if newName overlaps with an existing name\n            if (elementPropArr.map((elem) => elem.name).includes(newName))\n              return;\n\n            const newElementObjArr = generateElementPropsFromSchemas({\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              categoryHash,\n            });\n            newElementObjArr[index] = {\n              ...oldSection,\n              name: newName,\n            };\n            updateSchemas(newElementObjArr, {\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              onChange,\n            });\n          }}\n          onRequireToggle={() => {\n            const oldSection = elementProp;\n\n            const newElementObjArr = generateElementPropsFromSchemas({\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              categoryHash,\n            });\n            newElementObjArr[index] = {\n              ...oldSection,\n              required: !oldSection.required,\n            };\n            updateSchemas(newElementObjArr, {\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              onChange,\n            });\n          }}\n          onDependentsChange={(\n            newDependents: Array<{\n              children: Array<string>,\n              value?: any,\n            }>\n          ) => {\n            const oldSection = elementProp;\n\n            const newElementObjArr = generateElementPropsFromSchemas({\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              categoryHash,\n            });\n            newElementObjArr[index] = {\n              ...oldSection,\n              dependents: newDependents,\n            };\n            updateSchemas(newElementObjArr, {\n              schema,\n              uischema,\n              onChange,\n              definitionData,\n              definitionUi,\n            });\n          }}\n          onDelete={() => {\n            // splice out this index from the card array\n            const newElementObjArr = generateElementPropsFromSchemas({\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              categoryHash,\n            });\n            newElementObjArr.splice(index, 1);\n            setCardOpenArray(cardOpenArray.splice(index, 1));\n            updateSchemas(newElementObjArr, {\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              onChange,\n            });\n          }}\n          onMoveUp={() => {\n            const newElementObjArr = generateElementPropsFromSchemas({\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              categoryHash,\n            });\n            if (index === 0) return;\n\n            const tempBlock = newElementObjArr[index - 1];\n            newElementObjArr[index - 1] = newElementObjArr[index];\n            newElementObjArr[index] = tempBlock;\n            updateSchemas(newElementObjArr, {\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              onChange,\n            });\n          }}\n          onMoveDown={() => {\n            const newElementObjArr = generateElementPropsFromSchemas({\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              categoryHash,\n            });\n            if (index === elementPropArr.length - 1) return;\n\n            const tempBlock = newElementObjArr[index + 1];\n            newElementObjArr[index + 1] = newElementObjArr[index];\n            newElementObjArr[index] = tempBlock;\n            updateSchemas(newElementObjArr, {\n              schema,\n              uischema,\n              definitionData,\n              definitionUi,\n              onChange,\n            });\n          }}\n          name={elementProp.name}\n          key={`${path}_${elementPropArr[index].name}`}\n          required={elementProp.required}\n          path={`${path}_${elementProp.name}`}\n          definitionData={definitionData || {}}\n          definitionUi={definitionUi || {}}\n          hideKey={hideKey}\n          reference={elementProp.$ref}\n          neighborNames={elementProp.neighborNames}\n          dependents={elementProp.dependents}\n          dependent={elementProp.dependent}\n          parent={elementProp.parent}\n          addElem={(choice: string) => {\n            if (choice === 'card') {\n              addCardObj({\n                schema,\n                uischema,\n                onChange,\n                definitionData: definitionData || {},\n                definitionUi: definitionUi || {},\n                index,\n                categoryHash,\n              });\n            } else if (choice === 'section') {\n              addSectionObj({\n                schema,\n                uischema,\n                onChange,\n                definitionData: definitionData || {},\n                definitionUi: definitionUi || {},\n                index,\n                categoryHash,\n              });\n            }\n            setCardOpenArray([...cardOpenArray, false]);\n          }}\n          cardOpen={expanded}\n          setCardOpen={(newState: boolean) =>\n            setCardOpenArray([\n              ...cardOpenArray.slice(0, index),\n              newState,\n              ...cardOpenArray.slice(index + 1),\n            ])\n          }\n          mods={mods}\n          categoryHash={categoryHash}\n        />\n      );\n    } else {\n      return (\n        <div>\n          <h2> Error parsing element </h2>\n        </div>\n      );\n    }\n  });\n\n  return elementList;\n}\n\n// function called when drag and drop ends\nexport function onDragEnd(\n  result: any,\n  details: {\n    schema: { [string]: any },\n    uischema: { [string]: any },\n    onChange: ({ [string]: any }, { [string]: any }) => any,\n    definitionData?: { [string]: any },\n    definitionUi?: { [string]: any },\n    categoryHash: { [string]: string },\n  }\n) {\n  const {\n    schema,\n    uischema,\n    onChange,\n    definitionData,\n    definitionUi,\n    categoryHash,\n  } = details;\n  const src = result.source.index;\n  const dest = result.destination.index;\n  const newElementObjArr = generateElementPropsFromSchemas({\n    schema,\n    uischema,\n    definitionData,\n    definitionUi,\n    categoryHash,\n  });\n\n  const tempBlock = newElementObjArr[src];\n  newElementObjArr[src] = newElementObjArr[dest];\n  newElementObjArr[dest] = tempBlock;\n\n  updateSchemas(newElementObjArr, {\n    schema,\n    uischema,\n    definitionData: definitionData || {},\n    definitionUi: definitionUi || {},\n    onChange,\n  });\n}\n\n// helper function to recursively update sections\nfunction propagateElementChange(\n  elementArr: Array<ElementProps>,\n  definitionData: { [string]: any },\n  definitionUi: { [string]: any },\n  categoryHash: { [string]: string }\n) {\n  const updatedElementArr = [];\n  elementArr.forEach((element) => {\n    // update section and it's children\n    if (element.propType === 'section') {\n      const childrenElements = generateElementPropsFromSchemas({\n        schema: element.schema,\n        uischema: element.uischema,\n        definitionData,\n        definitionUi,\n        categoryHash,\n      });\n      const updatedChildren = propagateElementChange(\n        childrenElements,\n        definitionData,\n        definitionUi,\n        categoryHash\n      );\n      const newUiSchema = {\n        ...element.uischema,\n        ...generateUiSchemaFromElementProps(updatedChildren, definitionUi),\n      };\n      const newSchema = {\n        ...element.schema,\n        ...generateSchemaFromElementProps(updatedChildren),\n      };\n      const newElement = {\n        ...element,\n        schema: newSchema,\n        uischema: newUiSchema,\n      };\n      updatedElementArr.push(newElement);\n    } else {\n      updatedElementArr.push(element);\n    }\n  });\n  return updatedElementArr;\n}\n\n// propogate changes in a schema and ui schema with updated definitions but outdated body componenents\nexport function propagateDefinitionChanges(\n  schema: { [string]: any },\n  uischema: { [string]: any },\n  onChange: ({ [string]: any }, { [string]: any }) => void,\n  categoryHash: { [string]: string }\n) {\n  const definitionData = schema.definitions;\n  const definitionUi = uischema.definitions;\n  const bodyElements = generateElementPropsFromSchemas({\n    schema,\n    uischema,\n    definitionData,\n    definitionUi,\n    categoryHash,\n  });\n  const updatedBodyElements = propagateElementChange(\n    bodyElements,\n    definitionData,\n    definitionUi,\n    categoryHash\n  );\n\n  updateSchemas(updatedBodyElements, {\n    schema,\n    uischema,\n    definitionData,\n    definitionUi,\n    onChange,\n  });\n}\n","// @flow\n\nimport React from 'react';\nimport Select from 'react-select';\nimport { Input } from 'reactstrap';\nimport GeneralParameterInputs from './GeneralParameterInputs';\nimport {\n  defaultUiProps,\n  defaultDataProps,\n  categoryToNameMap,\n  categoryType,\n} from './utils';\nimport type { Parameters, Mods } from './types';\nimport Tooltip from './Tooltip';\n\n// specify the inputs required for any type of object\nexport default function CardGeneralParameterInputs({\n  parameters,\n  onChange,\n  mods,\n}: {\n  parameters: Parameters,\n  onChange: (newParams: Parameters) => void,\n  mods?: Mods,\n}) {\n  const [keyState, setKeyState] = React.useState(parameters.name);\n  const [titleState, setTitleState] = React.useState(parameters.title);\n  const [descriptionState, setDescriptionState] = React.useState(\n    parameters.description\n  );\n  const categoryMap = categoryToNameMap(parameters.category, mods);\n\n  return (\n    <div>\n      <div className=\"card-entry\">\n        <h5>\n          Object Name{' '}\n          <Tooltip\n            text={\n              mods &&\n              mods.tooltipDescriptions &&\n              typeof mods.tooltipDescriptions.cardObjectName === 'string'\n                ? mods.tooltipDescriptions.cardObjectName\n                : 'The back-end name of the object'\n            }\n            id={`${(keyState: string)}_nameinfo`}\n            type=\"help\"\n          />\n        </h5>\n\n        <Input\n          value={keyState || ''}\n          placeholder=\"Key\"\n          type=\"text\"\n          onChange={(ev: SyntheticInputEvent<HTMLInputElement>) =>\n            setKeyState(ev.target.value.replace(/\\W/g, '_'))\n          }\n          onBlur={(ev: SyntheticInputEvent<HTMLInputElement>) =>\n            onChange({\n              ...parameters,\n              name: ev.target.value,\n            })\n          }\n          className=\"card-text\"\n        />\n      </div>\n      <div\n        className={`card-entry ${\n          parameters.$ref === undefined ? '' : 'disabled-input'\n        }`}\n      >\n        <h5>\n          Display Name{' '}\n          <Tooltip\n            text={\n              mods &&\n              mods.tooltipDescriptions &&\n              typeof mods.tooltipDescriptions.cardDisplayName === 'string'\n                ? mods.tooltipDescriptions.cardDisplayName\n                : 'The user-facing name of this object'\n            }\n            id={`${(keyState: string)}-titleinfo`}\n            type=\"help\"\n          />\n        </h5>\n        <Input\n          value={titleState || ''}\n          placeholder=\"Title\"\n          type=\"text\"\n          onChange={(ev: SyntheticInputEvent<HTMLInputElement>) =>\n            setTitleState(ev.target.value)\n          }\n          onBlur={(ev: SyntheticInputEvent<HTMLInputElement>) => {\n            onChange({ ...parameters, title: ev.target.value });\n          }}\n          className=\"card-text\"\n          readOnly={parameters.$ref !== undefined}\n        />\n      </div>\n      <div className={`card-entry ${parameters.$ref ? 'disabled-input' : ''}`}>\n        <h5>\n          Description{' '}\n          <Tooltip\n            text={\n              mods &&\n              mods.tooltipDescriptions &&\n              typeof mods.tooltipDescriptions.cardDescription === 'string'\n                ? mods.tooltipDescriptions.cardDescription\n                : 'This will appear as help text on the form'\n            }\n            id={`${(keyState: string)}-descriptioninfo`}\n            type=\"help\"\n          />\n        </h5>\n        <Input\n          value={descriptionState || ''}\n          placeholder=\"Description\"\n          type=\"text\"\n          onChange={(ev: SyntheticInputEvent<HTMLInputElement>) =>\n            setDescriptionState(ev.target.value)\n          }\n          onBlur={(ev: SyntheticInputEvent<HTMLInputElement>) => {\n            onChange({ ...parameters, description: ev.target.value });\n          }}\n          className=\"card-text\"\n          readOnly={parameters.$ref !== undefined}\n        />\n      </div>\n      <div className=\"card-entry\">\n        <h5>\n          Input Type{' '}\n          <Tooltip\n            text={\n              mods &&\n              mods.tooltipDescriptions &&\n              typeof mods.tooltipDescriptions.cardInputType === 'string'\n                ? mods.tooltipDescriptions.cardInputType\n                : 'The type of form input displayed on the form'\n            }\n            id={`${(keyState: string)}-inputinfo`}\n            type=\"help\"\n          />\n        </h5>\n        <Select\n          value={{\n            value: parameters.category,\n            label: categoryMap[parameters.category],\n          }}\n          placeholder=\"Category\"\n          options={Object.keys(categoryMap)\n            .filter(\n              (key) =>\n                key !== 'ref' ||\n                (parameters.definitionData &&\n                  Object.keys(parameters.definitionData).length !== 0)\n            )\n            .map((key) => ({\n              value: key,\n              label: categoryMap[key],\n            }))}\n          onChange={(val: any) => {\n            // figure out the new 'type'\n            const newCategory = val.value;\n\n            const newProps = {\n              ...defaultUiProps(newCategory, mods),\n              ...defaultDataProps(newCategory, mods),\n              name: parameters.name,\n              required: parameters.required,\n            };\n            if (newProps.$ref !== undefined && !newProps.$ref) {\n              // assign an initial reference\n              const firstDefinition = Object.keys(parameters.definitionData)[0];\n              newProps.$ref = `#/definitions/${firstDefinition || 'empty'}`;\n            }\n            onChange({\n              ...newProps,\n              title: newProps.title || parameters.title,\n              default: newProps.default || '',\n              type: newProps.type || categoryType(newCategory, mods),\n              category: newProps.category || newCategory,\n            });\n          }}\n          className=\"card-select\"\n        />\n      </div>\n      <div className=\"card-category-options\">\n        <GeneralParameterInputs\n          category={parameters.category}\n          parameters={parameters}\n          onChange={onChange}\n          mods={mods}\n        />\n      </div>\n    </div>\n  );\n}\n","// @flow\n\nimport * as React from 'react';\nimport { UncontrolledTooltip } from 'reactstrap';\nimport { createUseStyles } from 'react-jss';\nimport FBCheckbox from './checkbox/FBCheckbox';\nimport Collapse from './Collapse/Collapse';\nimport CardModal from './CardModal';\nimport CardGeneralParameterInputs from './CardGeneralParameterInputs';\nimport Add from './Add';\nimport Tooltip from './Tooltip';\nimport type { Parameters, Mods } from './types';\n\nconst useStyles = createUseStyles({\n  cardEntries: {\n    'border-bottom': '1px solid gray',\n    margin: '.5em 1.5em 0 1.5em',\n    '& h5': {\n      color: 'black',\n      'font-size': '14px',\n      'font-weight': 'bold',\n      margin: 0,\n    },\n    '& .card-entry': {\n      display: 'inline-block',\n      margin: 0,\n      width: '50%',\n      'text-align': 'left',\n      padding: '0.5em',\n    },\n    '& input': {\n      border: '1px solid gray',\n      'border-radius': '4px',\n    },\n    '& .card-category-options': {\n      padding: '.5em',\n    },\n    '& .card-select': {\n      'border': '1px solid var(--gray)',\n      'border-radius': '4px',\n    },\n    '& .card-array': { '& .fa-plus-square': { display: 'none' } },\n    '& .card-enum': {\n      display: 'flex',\n      flexDirection: 'column',\n      width: '100%',\n      backgroundColor: 'var(--light-gray)',\n      textAlign: 'left',\n      padding: '1em',\n      '& h3': { fontSize: '16px', margin: '0' },\n      '& label': { color: 'black', fontSize: '14px' },\n      '& .card-enum-header': {\n        marginTop: '0.5em',\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'row',\n        '& h5': { width: '50%', fontWeight: 'bold', fontSize: '14px' },\n      },\n      '& i': { cursor: 'pointer' },\n      '& .card-enum-option': {\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'row',\n        '& input': { width: '80%', marginRight: '1em', marginBottom: '0.5em' },\n      },\n    },\n  },\n  cardInteractions: {\n    margin: '.5em 1.5em',\n    textAlign: 'left',\n    '& .fa': { marginRight: '1em', borderRadius: '4px', padding: '.25em' },\n    '& .fa-arrow-up, .fa-arrow-down': { marginRight: '.5em' },\n    '& .fa-trash': { border: '1px solid #DE5354', color: '#DE5354' },\n    '& .fb-checkbox': { display: 'inline-block' },\n    '& .interactions-left, & .interactions-right': {\n      display: 'inline-block',\n      width: '48%',\n      margin: '0 auto',\n    },\n    '& .interactions-left': { textAlign: 'left' },\n    '& .interactions-right': { textAlign: 'right' },\n  },\n});\n\nexport default function Card({\n  componentProps,\n  onChange,\n  onDelete,\n  onMoveUp,\n  onMoveDown,\n  TypeSpecificParameters,\n  addElem,\n  cardOpen,\n  setCardOpen,\n  mods,\n}: {\n  componentProps: {\n    [string]: string | number | boolean | Array<string | number>,\n    path: string,\n  },\n  onChange: ({ [string]: any }) => void,\n  onDelete?: () => void,\n  onMoveUp?: () => void,\n  onMoveDown?: () => void,\n  TypeSpecificParameters: React.AbstractComponent<{\n    parameters: Parameters,\n    onChange: (newParams: Parameters) => void,\n  }>,\n  addElem?: (choice: string) => void,\n  cardOpen: boolean,\n  setCardOpen: (newState: boolean) => void,\n  mods?: Mods,\n}) {\n  const classes = useStyles();\n  const [modalOpen, setModalOpen] = React.useState(false);\n\n  return (\n    <React.Fragment>\n      <Collapse\n        isOpen={cardOpen}\n        toggleCollapse={() => setCardOpen(!cardOpen)}\n        title={\n          <React.Fragment>\n            <span onClick={() => setCardOpen(!cardOpen)} className=\"label\">\n              {componentProps.title || componentProps.name}{' '}\n              {componentProps.parent ? (\n                <Tooltip\n                  text={`Depends on ${(componentProps.parent: any)}`}\n                  id={`${componentProps.path}_parentinfo`}\n                  type=\"alert\"\n                />\n              ) : (\n                ''\n              )}\n              {componentProps.$ref !== undefined ? (\n                <Tooltip\n                  text={`Is an instance of pre-configured component ${(componentProps.$ref: any)}`}\n                  id={`${componentProps.path}_refinfo`}\n                  type=\"alert\"\n                />\n              ) : (\n                ''\n              )}\n            </span>\n            <span className=\"arrows\">\n              <i\n                className=\"fa fa-arrow-up\"\n                id={`${componentProps.path}_moveupbiginfo`}\n                onClick={() => (onMoveUp ? onMoveUp() : {})}\n              ></i>\n              <UncontrolledTooltip\n                placement=\"top\"\n                target={`${componentProps.path}_moveupbiginfo`}\n              >\n                Move form element up\n              </UncontrolledTooltip>\n              <i\n                className=\"fa fa-arrow-down\"\n                id={`${componentProps.path}_movedownbiginfo`}\n                onClick={() => (onMoveDown ? onMoveDown() : {})}\n              ></i>\n              <UncontrolledTooltip\n                placement=\"top\"\n                target={`${componentProps.path}_movedownbiginfo`}\n              >\n                Move form element down\n              </UncontrolledTooltip>\n            </span>\n          </React.Fragment>\n        }\n        className={`card-container ${\n          componentProps.dependent ? 'card-dependent' : ''\n        } ${componentProps.$ref === undefined ? '' : 'card-reference'}`}\n      >\n        <div className={classes.cardEntries}>\n          <CardGeneralParameterInputs\n            parameters={(componentProps: any)}\n            onChange={onChange}\n            mods={mods}\n          />\n        </div>\n        <div className={classes.cardInteractions}>\n          <i\n            id={`${componentProps.path}_editinfo`}\n            className=\"fa fa-pencil\"\n            onClick={() => setModalOpen(true)}\n          ></i>\n          <UncontrolledTooltip\n            placement=\"top\"\n            target={`${componentProps.path}_editinfo`}\n          >\n            Additional configurations for this form element\n          </UncontrolledTooltip>\n          <i\n            className=\"fa fa-trash\"\n            id={`${componentProps.path}_trashinfo`}\n            onClick={onDelete || (() => {})}\n          ></i>\n          <UncontrolledTooltip\n            placement=\"top\"\n            target={`${componentProps.path}_trashinfo`}\n          >\n            Delete form element\n          </UncontrolledTooltip>\n          <FBCheckbox\n            onChangeValue={() =>\n              onChange({\n                ...componentProps,\n                required: !componentProps.required,\n              })\n            }\n            isChecked={!!componentProps.required}\n            label=\"Required\"\n            id={`${\n              typeof componentProps.path === 'string'\n                ? componentProps.path\n                : 'card'\n            }_required`}\n          />\n        </div>\n        <CardModal\n          componentProps={componentProps}\n          isOpen={modalOpen}\n          onClose={() => setModalOpen(false)}\n          onChange={(newComponentProps: {\n            [string]: string | number | boolean | Array<string | number>,\n          }) => {\n            onChange(newComponentProps);\n          }}\n          TypeSpecificParameters={TypeSpecificParameters}\n        />\n      </Collapse>\n      {addElem ? (\n        <Add\n          name={`${componentProps.path}`}\n          addElem={(choice: string) => addElem(choice)}\n        />\n      ) : (\n        ''\n      )}\n    </React.Fragment>\n  );\n}\n","// @flow\nimport * as React from 'react';\nimport { Input } from 'reactstrap';\nimport Select from 'react-select';\nimport FBCheckbox from '../checkbox/FBCheckbox';\nimport CardEnumOptions from '../CardEnumOptions';\nimport type { Parameters } from '../types';\n\n// specify the inputs required for a string type object\nexport function CardDefaultParameterInputs() {\n  return <div></div>;\n}\n\nfunction TimeField({\n  parameters,\n  onChange,\n}: {\n  parameters: Parameters,\n  onChange: (newParams: Parameters) => void,\n}) {\n  return (\n    <React.Fragment>\n      <h5>Default time</h5>\n      <Input\n        value={parameters.default || ''}\n        placeholder=\"Default\"\n        type=\"datetime-local\"\n        onChange={(ev: SyntheticInputEvent<HTMLInputElement>) =>\n          onChange({ ...parameters, default: ev.target.value })\n        }\n        className=\"card-text\"\n      />\n    </React.Fragment>\n  );\n}\n\nfunction Checkbox({\n  parameters,\n  onChange,\n}: {\n  parameters: Parameters,\n  onChange: (newParams: Parameters) => void,\n}) {\n  return (\n    <div className=\"card-boolean\">\n      <FBCheckbox\n        onChangeValue={() => {\n          onChange({\n            ...parameters,\n            default: parameters.default ? parameters.default !== true : true,\n          });\n        }}\n        isChecked={parameters.default ? parameters.default === true : false}\n        label=\"Default\"\n      />\n    </div>\n  );\n}\n\nfunction MultipleChoice({\n  parameters,\n  onChange,\n}: {\n  parameters: Parameters,\n  onChange: (newParams: Parameters) => void,\n}) {\n  const enumArray = Array.isArray(parameters.enum) ? parameters.enum : [];\n  // eslint-disable-next-line no-restricted-globals\n  const containsUnparsableString = enumArray.some((val) => isNaN(val));\n  const containsString =\n    containsUnparsableString ||\n    enumArray.some((val) => typeof val === 'string');\n  const [isNumber, setIsNumber] = React.useState(\n    !!enumArray.length && !containsString\n  );\n  return (\n    <div className=\"card-enum\">\n      <h3>Possible Values</h3>\n      <FBCheckbox\n        onChangeValue={() => {\n          if (Array.isArray(parameters.enumNames)) {\n            // remove the enumNames\n            onChange({\n              ...parameters,\n              enumNames: null,\n            });\n          } else {\n            // create enumNames as a copy of enum values\n            onChange({\n              ...parameters,\n              enumNames: enumArray.map((val) => `${val}`),\n            });\n          }\n        }}\n        isChecked={Array.isArray(parameters.enumNames)}\n        label=\"Display label is different from value\"\n      />\n      <div style={{ display: containsUnparsableString ? 'none' : 'initial' }}>\n        <FBCheckbox\n          onChangeValue={() => {\n            if (containsString) {\n              // attempt converting enum values into numbers\n              try {\n                const newEnum = enumArray.map((val) => {\n                  let newNum = 0;\n                  if (val) newNum = parseFloat(val);\n                  if (Number.isNaN(newNum))\n                    throw new Error(`Could not convert ${val}`);\n                  return newNum;\n                });\n                setIsNumber(true);\n                onChange({\n                  ...parameters,\n                  enum: newEnum,\n                });\n              } catch (error) {\n                // eslint-disable-next-line no-console\n                console.error(error);\n              }\n            } else {\n              // convert enum values back into strings\n              const newEnum = enumArray.map((val) => `${val}`);\n              setIsNumber(false);\n              onChange({\n                ...parameters,\n                enum: newEnum,\n              });\n            }\n          }}\n          isChecked={isNumber}\n          disabled={containsUnparsableString}\n          label=\"Force number\"\n          id={`${\n            typeof parameters.path === 'string' ? parameters.path : ''\n          }_forceNumber`}\n        />\n      </div>\n      <CardEnumOptions\n        initialValues={enumArray}\n        names={\n          Array.isArray(parameters.enumNames)\n            ? parameters.enumNames.map((val) => `${val}`)\n            : undefined\n        }\n        showNames={Array.isArray(parameters.enumNames)}\n        onChange={(newEnum: Array<string>, newEnumNames?: Array<string>) =>\n          onChange({\n            ...parameters,\n            enum: newEnum,\n            enumNames: newEnumNames,\n          })\n        }\n        type={isNumber ? 'number' : 'string'}\n      />\n    </div>\n  );\n}\n\nfunction RefChoice({\n  parameters,\n  onChange,\n}: {\n  parameters: Parameters,\n  onChange: (newParams: Parameters) => void,\n}) {\n  return (\n    <div className=\"card-select\">\n      <Select\n        value={{\n          value: parameters.$ref,\n          label: parameters.$ref,\n        }}\n        placeholder=\"Reference\"\n        options={Object.keys(parameters.definitionData || {}).map((key) => ({\n          value: `#/definitions/${key}`,\n          label: `#/definitions/${key}`,\n        }))}\n        onChange={(val: any) => {\n          onChange({ ...parameters, $ref: val.value });\n        }}\n        className=\"card-select\"\n      />\n    </div>\n  );\n}\n\nconst DefaultInputs = {\n  time: {\n    displayName: 'Time',\n    matchIf: [\n      {\n        types: ['string'],\n        format: 'date-time',\n      },\n    ],\n    defaultDataSchema: {\n      format: 'date-time',\n    },\n    defaultUiSchema: {},\n    type: 'string',\n    cardBody: TimeField,\n    modalBody: CardDefaultParameterInputs,\n  },\n  checkbox: {\n    displayName: 'Checkbox',\n    matchIf: [\n      {\n        types: ['boolean'],\n      },\n    ],\n    defaultDataSchema: {},\n    defaultUiSchema: {},\n    type: 'boolean',\n    cardBody: Checkbox,\n    modalBody: CardDefaultParameterInputs,\n  },\n  ref: {\n    displayName: 'Reference',\n    matchIf: [\n      {\n        types: [null],\n        $ref: true,\n      },\n    ],\n    defaultDataSchema: {\n      $ref: '',\n    },\n    defaultUiSchema: {},\n    type: null,\n    cardBody: RefChoice,\n    modalBody: CardDefaultParameterInputs,\n  },\n  radio: {\n    displayName: 'Radio',\n    matchIf: [\n      {\n        types: ['string', 'number', 'integer', 'array', 'boolean', null],\n        widget: 'radio',\n        enum: true,\n      },\n    ],\n    defaultDataSchema: { enum: [] },\n    defaultUiSchema: {\n      'ui:widget': 'radio',\n    },\n    type: null,\n    cardBody: MultipleChoice,\n    modalBody: CardDefaultParameterInputs,\n  },\n  dropdown: {\n    displayName: 'Dropdown',\n    matchIf: [\n      {\n        types: ['string', 'number', 'integer', 'array', 'boolean', null],\n        enum: true,\n      },\n    ],\n    defaultDataSchema: { enum: [] },\n    defaultUiSchema: {},\n    type: null,\n    cardBody: MultipleChoice,\n    modalBody: CardDefaultParameterInputs,\n  },\n};\n\nexport default DefaultInputs;\n","// @flow\nimport * as React from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport Select from 'react-select';\nimport { createUseStyles } from 'react-jss';\nimport { Alert, Input, UncontrolledTooltip } from 'reactstrap';\nimport FBCheckbox from './checkbox/FBCheckbox';\nimport Collapse from './Collapse/Collapse';\nimport CardModal from './CardModal';\nimport { CardDefaultParameterInputs } from './defaults/DefaultInputs';\nimport Tooltip from './Tooltip';\nimport Add from './Add';\nimport {\n  checkForUnsupportedFeatures,\n  generateElementComponentsFromSchemas,\n  countElementsFromSchema,\n  addCardObj,\n  addSectionObj,\n  onDragEnd,\n} from './utils';\nimport type { Mods } from './types';\n\nconst useStyles = createUseStyles({\n  sectionContainer: {\n    '& .section-head': {\n      borderBottom: '1px solid var(--gray)',\n      margin: '0.5em 1.5em 0 1.5em',\n      '& h5': {\n        color: 'black',\n        fontSize: '14px',\n        fontWeight: 'bold',\n        margin: '0',\n      },\n      '& .section-entry': {\n        display: 'inline-block',\n        margin: '0',\n        width: '33%',\n        textAlign: 'left',\n        padding: '0.5em',\n      },\n      '& .section-reference': { width: '100%' },\n    },\n    '& .section-footer': {\n      marginTop: '1em',\n      textAlign: 'center',\n      i: { cursor: 'pointer' },\n    },\n    '& .section-interactions': {\n      margin: '0.5em 1.5em',\n      textAlign: 'left',\n      borderTop: '1px solid var(--gray)',\n      paddingTop: '1em',\n      '& .fa': { marginRight: '1em', borderRadius: '4px', padding: '0.25em' },\n      '& .fa-pencil, & .fa-arrow-up, & .fa-arrow-down': {\n        border: '1px solid #1d71ad',\n        color: '#1d71ad',\n      },\n      '& .fa-trash': { border: '1px solid #de5354', color: '#de5354' },\n      '& .fa-arrow-up, & .fa-arrow-down': { marginRight: '0.5em' },\n      '& .fb-checkbox': {\n        display: 'inline-block',\n        label: { color: '#9aa4ab' },\n      },\n      '& .interactions-left, & .interactions-right': {\n        display: 'inline-block',\n        width: '48%',\n        margin: '0 auto',\n      },\n      '& .interactions-left': { textAlign: 'left' },\n      '& .interactions-right': { textAlign: 'right' },\n    },\n  },\n});\n\nexport default function Section({\n  name,\n  required,\n  schema,\n  uischema,\n  onChange,\n  onNameChange,\n  onRequireToggle,\n  onDependentsChange,\n  onDelete,\n  onMoveUp,\n  onMoveDown,\n  path,\n  definitionData,\n  definitionUi,\n  hideKey,\n  reference,\n  dependents,\n  dependent,\n  parent,\n  neighborNames,\n  addElem,\n  cardOpen,\n  setCardOpen,\n  mods,\n  categoryHash,\n}: {\n  name: string,\n  required: boolean,\n  schema: { [string]: any },\n  uischema: { [string]: any },\n  onChange: (\n    schema: { [string]: any },\n    uischema: { [string]: any },\n    ref?: string\n  ) => void,\n  onNameChange: (string) => void,\n  onDependentsChange: (\n    Array<{\n      children: Array<string>,\n      value?: any,\n    }>\n  ) => void,\n  onRequireToggle: () => any,\n  onDelete: () => any,\n  onMoveUp?: () => any,\n  onMoveDown?: () => any,\n  path: string,\n  definitionData: { [string]: any },\n  definitionUi: { [string]: any },\n  hideKey?: boolean,\n  reference?: string,\n  dependents?: Array<{\n    children: Array<string>,\n    value?: any,\n  }>,\n  dependent?: boolean,\n  parent?: string,\n  neighborNames?: Array<string>,\n  addElem?: (choice: string) => void,\n  cardOpen: boolean,\n  setCardOpen: (newState: boolean) => void,\n  mods?: Mods,\n  categoryHash: { [string]: string },\n}) {\n  const classes = useStyles();\n  const unsupportedFeatures = checkForUnsupportedFeatures(\n    schema || {},\n    uischema || {},\n    mods\n  );\n  const schemaData = schema || {};\n  const elementNum = countElementsFromSchema(schemaData);\n  const defaultCollapseStates = [...Array(elementNum)].map(() => false);\n  const [cardOpenArray, setCardOpenArray] = React.useState(\n    defaultCollapseStates\n  );\n\n  // keep name in state to avoid losing focus\n  const [keyName, setKeyName] = React.useState(name);\n  // keep requirements in state to avoid rapid updates\n  const [modalOpen, setModalOpen] = React.useState(false);\n\n  return (\n    <React.Fragment>\n      <Collapse\n        isOpen={cardOpen}\n        toggleCollapse={() => setCardOpen(!cardOpen)}\n        title={\n          <React.Fragment>\n            <span onClick={() => setCardOpen(!cardOpen)} className=\"label\">\n              {schemaData.title || keyName}{' '}\n              {parent ? (\n                <Tooltip\n                  text={`Depends on ${parent}`}\n                  id={`${keyName}_parentinfo`}\n                  type=\"alert\"\n                />\n              ) : (\n                ''\n              )}\n            </span>\n            <span className=\"arrows\">\n              <i\n                className=\"fa fa-arrow-up\"\n                id={`${path}_moveupbiginfo`}\n                onClick={() => (onMoveUp ? onMoveUp() : {})}\n              ></i>\n              <UncontrolledTooltip\n                placement=\"top\"\n                target={`${path}_moveupbiginfo`}\n              >\n                Move form element up\n              </UncontrolledTooltip>\n              <i\n                className=\"fa fa-arrow-down\"\n                id={`${path}_movedownbiginfo`}\n                onClick={() => (onMoveDown ? onMoveDown() : {})}\n              ></i>\n              <UncontrolledTooltip\n                placement=\"top\"\n                target={`${path}_movedownbiginfo`}\n              >\n                Move form element down\n              </UncontrolledTooltip>\n            </span>\n          </React.Fragment>\n        }\n        className={`section-container ${classes.sectionContainer} ${\n          dependent ? 'section-dependent' : ''\n        } ${reference ? 'section-reference' : ''}`}\n      >\n        <div\n          className={`section-entries ${reference ? 'section-reference' : ''}`}\n        >\n          <div className=\"section-head\">\n            {reference ? (\n              <div className=\"section-entry section-reference\">\n                <h5>Reference Section</h5>\n                <Select\n                  value={{\n                    value: reference,\n                    label: reference,\n                  }}\n                  placeholder=\"Reference\"\n                  options={Object.keys(definitionData).map((key) => ({\n                    value: `#/definitions/${key}`,\n                    label: `#/definitions/${key}`,\n                  }))}\n                  onChange={(val: any) => {\n                    onChange(schema, uischema, val.value);\n                  }}\n                  className=\"section-select\"\n                />\n              </div>\n            ) : (\n              ''\n            )}\n            <div className=\"section-entry\">\n              <h5>\n                Section Object Name{' '}\n                <Tooltip\n                  text=\"The name that will appear in the backend of Servicely\"\n                  id={`${keyName}_nameinfo`}\n                  type=\"help\"\n                />\n              </h5>\n              <Input\n                value={keyName || ''}\n                placeholder=\"Key\"\n                type=\"text\"\n                onChange={(ev: SyntheticInputEvent<HTMLInputElement>) =>\n                  setKeyName(ev.target.value.replace(/\\W/g, '_'))\n                }\n                onBlur={(ev: SyntheticInputEvent<HTMLInputElement>) =>\n                  onNameChange(ev.target.value)\n                }\n                className=\"card-text\"\n                readOnly={hideKey}\n              />\n            </div>\n            <div className=\"section-entry\">\n              <h5>\n                Section Display Name{' '}\n                <Tooltip\n                  text=\"The name Servicely will show to service requesters\"\n                  id={`${keyName}_titleinfo`}\n                  type=\"help\"\n                />\n              </h5>\n              <Input\n                value={schemaData.title || ''}\n                placeholder=\"Title\"\n                type=\"text\"\n                onChange={(ev: SyntheticInputEvent<HTMLInputElement>) =>\n                  onChange(\n                    {\n                      ...schema,\n                      title: ev.target.value,\n                    },\n                    uischema\n                  )\n                }\n                className=\"card-text\"\n              />\n            </div>\n            <div className=\"section-entry\">\n              <h5>\n                Section Description{' '}\n                <Tooltip\n                  text=\"This will appear as gray text in the service request form\"\n                  id={`${keyName}_descriptioninfo`}\n                  type=\"help\"\n                />\n              </h5>\n              <Input\n                value={schemaData.description || ''}\n                placeholder=\"Description\"\n                type=\"text\"\n                onChange={(ev: SyntheticInputEvent<HTMLInputElement>) =>\n                  onChange(\n                    {\n                      ...schema,\n                      description: ev.target.value,\n                    },\n                    uischema\n                  )\n                }\n                className=\"card-text\"\n              />\n            </div>\n            <Alert\n              style={{\n                display: unsupportedFeatures.length === 0 ? 'none' : 'block',\n              }}\n              color=\"warning\"\n            >\n              <h5>Unsupported Features:</h5>\n              {unsupportedFeatures.map((message) => (\n                <li key={`${path}_${message}`}>{message}</li>\n              ))}\n            </Alert>\n          </div>\n          <div className=\"section-body\">\n            <DragDropContext\n              onDragEnd={(result) =>\n                onDragEnd(result, {\n                  schema,\n                  uischema,\n                  onChange,\n                  definitionData,\n                  definitionUi,\n                  categoryHash,\n                })\n              }\n              className=\"section-body\"\n            >\n              <Droppable droppableId=\"droppable\">\n                {(providedDroppable) => (\n                  <div\n                    ref={providedDroppable.innerRef}\n                    {...providedDroppable.droppableProps}\n                  >\n                    {generateElementComponentsFromSchemas({\n                      schemaData: schema,\n                      uiSchemaData: uischema,\n                      onChange,\n                      path,\n                      definitionData,\n                      definitionUi,\n                      cardOpenArray,\n                      setCardOpenArray,\n                      mods,\n                      categoryHash,\n                    }).map((element: any, index) => (\n                      <Draggable\n                        key={element.key}\n                        draggableId={element.key}\n                        index={index}\n                      >\n                        {(providedDraggable) => (\n                          <div\n                            ref={providedDraggable.innerRef}\n                            {...providedDraggable.draggableProps}\n                            {...providedDraggable.dragHandleProps}\n                          >\n                            {element}\n                          </div>\n                        )}\n                      </Draggable>\n                    ))}\n                    {providedDroppable.placeholder}\n                  </div>\n                )}\n              </Droppable>\n            </DragDropContext>\n          </div>\n          <div className=\"section-footer\">\n            <Add\n              name={`${keyName}_inner`}\n              addElem={(choice: string) => {\n                if (choice === 'card') {\n                  addCardObj({\n                    schema,\n                    uischema,\n                    onChange,\n                    definitionData,\n                    definitionUi,\n                    categoryHash,\n                  });\n                } else if (choice === 'section') {\n                  addSectionObj({\n                    schema,\n                    uischema,\n                    onChange,\n                    definitionData,\n                    definitionUi,\n                    categoryHash,\n                  });\n                }\n              }}\n              hidden={\n                schemaData.properties &&\n                Object.keys(schemaData.properties).length !== 0\n              }\n            />\n          </div>\n          <div className=\"section-interactions\">\n            <i\n              className=\"fa fa-pencil\"\n              id={`${path}_editinfo`}\n              onClick={() => setModalOpen(true)}\n            ></i>\n            <UncontrolledTooltip placement=\"top\" target={`${path}_editinfo`}>\n              Additional configurations for this form element\n            </UncontrolledTooltip>\n            <i\n              className=\"fa fa-trash\"\n              id={`${path}_trashinfo`}\n              onClick={() => (onDelete ? onDelete() : {})}\n            ></i>\n            <UncontrolledTooltip placement=\"top\" target={`${path}_trashinfo`}>\n              Delete form element\n            </UncontrolledTooltip>\n            <FBCheckbox\n              onChangeValue={() => onRequireToggle()}\n              isChecked={required}\n              label=\"Required\"\n              id={`${path}_required`}\n            />\n          </div>\n        </div>\n        <CardModal\n          componentProps={{\n            dependents,\n            neighborNames,\n            name: keyName,\n            schema,\n            type: 'object',\n          }}\n          isOpen={modalOpen}\n          onClose={() => setModalOpen(false)}\n          onChange={(newComponentProps: { [string]: any }) => {\n            onDependentsChange(newComponentProps.dependents);\n          }}\n          TypeSpecificParameters={CardDefaultParameterInputs}\n        />\n      </Collapse>\n      {addElem ? (\n        <Add name={keyName} addElem={(choice: string) => addElem(choice)} />\n      ) : (\n        ''\n      )}\n    </React.Fragment>\n  );\n}\n","// @flow\n\nimport React from 'react';\nimport Select from 'react-select';\nimport { Input } from 'reactstrap';\nimport FBCheckbox from '../checkbox/FBCheckbox';\nimport Tooltip from '../Tooltip';\nimport type { Parameters } from '../types';\n\nconst formatDictionary = {\n  '': 'None',\n  'date-time': 'Date-Time',\n  email: 'Email',\n  hostname: 'Hostname',\n  time: 'Time',\n  uri: 'URI',\n  regex: 'Regular Expression',\n};\n\nconst autoDictionary = {\n  '': 'None',\n  email: 'Email',\n  username: 'User Name',\n  password: 'Password',\n  'street-address': 'Street Address',\n  country: 'Country',\n};\n\n// specify the inputs required for a string type object\nfunction CardShortAnswerParameterInputs({\n  parameters,\n  onChange,\n}: {\n  parameters: Parameters,\n  onChange: (newParams: Parameters) => void,\n}) {\n  return (\n    <div>\n      <h4>Minimum Length</h4>\n      <Input\n        value={parameters.minLength ? parameters.minLength : ''}\n        placeholder=\"Minimum Length\"\n        key=\"minLength\"\n        type=\"number\"\n        onChange={(ev: SyntheticInputEvent<HTMLInputElement>) => {\n          onChange({\n            ...parameters,\n            minLength: parseInt(ev.target.value, 10),\n          });\n        }}\n        className=\"card-modal-number\"\n      />\n      <h4>Maximum Length</h4>\n      <Input\n        value={parameters.maxLength ? parameters.maxLength : ''}\n        placeholder=\"Maximum Length\"\n        key=\"maxLength\"\n        type=\"number\"\n        onChange={(ev: SyntheticInputEvent<HTMLInputElement>) => {\n          onChange({\n            ...parameters,\n            maxLength: parseInt(ev.target.value, 10),\n          });\n        }}\n        className=\"card-modal-number\"\n      />\n      <h4>\n        Regular Expression Pattern\n        <a\n          href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <Tooltip\n            id={`${parameters.path}_regex`}\n            type=\"help\"\n            text=\"Regular expression pattern that this must satisfy\"\n          />\n        </a>\n      </h4>\n      <Input\n        value={parameters.pattern ? parameters.pattern : ''}\n        placeholder=\"Regular Expression Pattern\"\n        key=\"pattern\"\n        type=\"text\"\n        onChange={(ev: SyntheticInputEvent<HTMLInputElement>) => {\n          onChange({\n            ...parameters,\n            pattern: ev.target.value,\n          });\n        }}\n        className=\"card-modal-text\"\n      />\n      <h4>\n        Format{' '}\n        <Tooltip\n          id={`${parameters.path}_format`}\n          type=\"help\"\n          text=\"Require string input to match a certain common format\"\n        />\n      </h4>\n      <Select\n        value={{\n          value: parameters.format\n            ? formatDictionary[\n                typeof parameters.format === 'string' ? parameters.format : ''\n              ]\n            : '',\n          label: parameters.format\n            ? formatDictionary[\n                typeof parameters.format === 'string' ? parameters.format : ''\n              ]\n            : 'None',\n        }}\n        placeholder=\"Format\"\n        key=\"format\"\n        options={Object.keys(formatDictionary).map((key) => ({\n          value: key,\n          label: formatDictionary[key],\n        }))}\n        onChange={(val: any) => {\n          onChange({\n            ...parameters,\n            format: val.value,\n          });\n        }}\n        className=\"card-modal-select\"\n      />\n      <h5>\n        Auto Complete Category{' '}\n        <a\n          href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <Tooltip\n            id={`${parameters.path}_autocomplete`}\n            type=\"help\"\n            text=\"Suggest entries based on the user's browser history\"\n          />\n        </a>\n      </h5>\n      <Select\n        value={{\n          value: parameters['ui:autocomplete']\n            ? autoDictionary[\n                typeof parameters['ui:autocomplete'] === 'string'\n                  ? parameters['ui:autocomplete']\n                  : ''\n              ]\n            : '',\n          label: parameters['ui:autocomplete']\n            ? autoDictionary[\n                typeof parameters['ui:autocomplete'] === 'string'\n                  ? parameters['ui:autocomplete']\n                  : ''\n              ]\n            : 'None',\n        }}\n        placeholder=\"Auto Complete\"\n        key=\"ui:autocomplete\"\n        options={Object.keys(autoDictionary).map((key) => ({\n          value: key,\n          label: autoDictionary[key],\n        }))}\n        onChange={(val: any) => {\n          onChange({\n            ...parameters,\n            'ui:autocomplete': val.value,\n          });\n        }}\n        className=\"card-modal-select\"\n      />\n      <div className=\"card-modal-boolean\">\n        <FBCheckbox\n          onChangeValue={() => {\n            onChange({\n              ...parameters,\n              'ui:autofocus': parameters['ui:autofocus']\n                ? parameters['ui:autofocus'] !== true\n                : true,\n            });\n          }}\n          isChecked={\n            parameters['ui:autofocus']\n              ? parameters['ui:autofocus'] === true\n              : false\n          }\n          label=\"Auto Focus\"\n        />\n      </div>\n    </div>\n  );\n}\n\nfunction ShortAnswerField({\n  parameters,\n  onChange,\n}: {\n  parameters: Parameters,\n  onChange: (newParams: Parameters) => void,\n}) {\n  return (\n    <React.Fragment>\n      <h5>Default value</h5>\n      <Input\n        value={parameters.default}\n        placeholder=\"Default\"\n        type=\"text\"\n        onChange={(ev: SyntheticInputEvent<HTMLInputElement>) =>\n          onChange({ ...parameters, default: ev.target.value })\n        }\n        className=\"card-text\"\n      />\n    </React.Fragment>\n  );\n}\n\nfunction Password({\n  parameters,\n  onChange,\n}: {\n  parameters: Parameters,\n  onChange: (newParams: Parameters) => void,\n}) {\n  return (\n    <React.Fragment>\n      <h5>Default password</h5>\n      <Input\n        value={parameters.default}\n        placeholder=\"Default\"\n        type=\"password\"\n        onChange={(ev: SyntheticInputEvent<HTMLInputElement>) =>\n          onChange({ ...parameters, default: ev.target.value })\n        }\n        className=\"card-text\"\n      />\n    </React.Fragment>\n  );\n}\n\nconst ShortAnswerInput = {\n  shortAnswer: {\n    displayName: 'Short Answer',\n    matchIf: [\n      {\n        types: ['string'],\n      },\n    ],\n    defaultDataSchema: {},\n    defaultUiSchema: {},\n    type: 'string',\n    cardBody: ShortAnswerField,\n    modalBody: CardShortAnswerParameterInputs,\n  },\n  password: {\n    displayName: 'Password',\n    matchIf: [\n      {\n        types: ['string'],\n        widget: 'password',\n      },\n    ],\n    defaultDataSchema: {},\n    defaultUiSchema: {\n      'ui:widget': 'password',\n    },\n    type: 'string',\n    cardBody: Password,\n    modalBody: CardShortAnswerParameterInputs,\n  },\n};\n\nexport default ShortAnswerInput;\n","// @flow\n\nimport React from 'react';\nimport Select from 'react-select';\nimport { Input } from 'reactstrap';\nimport FBCheckbox from '../checkbox/FBCheckbox';\nimport Tooltip from '../Tooltip';\nimport type { Parameters } from '../types';\n\nconst formatDictionary = {\n  '': 'None',\n  'date-time': 'Date-Time',\n  email: 'Email',\n  hostname: 'Hostname',\n  time: 'Time',\n  uri: 'URI',\n  regex: 'Regular Expression',\n};\n\n// specify the inputs required for a string type object\nfunction CardLongAnswerParameterInputs({\n  parameters,\n  onChange,\n}: {\n  parameters: Parameters,\n  onChange: (newParams: Parameters) => void,\n}) {\n  return (\n    <div>\n      <h4>Minimum Length</h4>\n      <Input\n        value={parameters.minLength ? parameters.minLength : ''}\n        placeholder=\"Minimum Length\"\n        key=\"minLength\"\n        type=\"number\"\n        onChange={(ev: SyntheticInputEvent<HTMLInputElement>) => {\n          onChange({\n            ...parameters,\n            minLength: parseInt(ev.target.value, 10),\n          });\n        }}\n        className=\"card-modal-number\"\n      />\n      <h4>Maximum Length</h4>\n      <Input\n        value={parameters.maxLength ? parameters.maxLength : ''}\n        placeholder=\"Maximum Length\"\n        key=\"maxLength\"\n        type=\"number\"\n        onChange={(ev: SyntheticInputEvent<HTMLInputElement>) => {\n          onChange({\n            ...parameters,\n            maxLength: parseInt(ev.target.value, 10),\n          });\n        }}\n        className=\"card-modal-number\"\n      />\n      <h4>\n        Regular Expression Pattern\n        <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions\">\n          <Tooltip\n            id={`${parameters.path}_regex`}\n            type=\"help\"\n            text=\"Regular expression pattern that this must satisfy\"\n          />\n        </a>\n      </h4>\n      <Input\n        value={parameters.pattern ? parameters.pattern : ''}\n        placeholder=\"Regular Expression Pattern\"\n        key=\"pattern\"\n        type=\"text\"\n        onChange={(ev: SyntheticInputEvent<HTMLInputElement>) => {\n          onChange({\n            ...parameters,\n            pattern: ev.target.value,\n          });\n        }}\n        className=\"card-modal-text\"\n      />\n      <h4>\n        Format{' '}\n        <Tooltip\n          id={`${parameters.path}_format`}\n          type=\"help\"\n          text=\"Require string input to match a certain common format\"\n        />\n      </h4>\n      <Select\n        value={{\n          value: parameters.format\n            ? formatDictionary[\n                typeof parameters.format === 'string' ? parameters.format : ''\n              ]\n            : '',\n          label: parameters.format\n            ? formatDictionary[\n                typeof parameters.format === 'string' ? parameters.format : ''\n              ]\n            : 'None',\n        }}\n        placeholder=\"Format\"\n        key=\"format\"\n        options={Object.keys(formatDictionary).map((key) => ({\n          value: key,\n          label: formatDictionary[key],\n        }))}\n        onChange={(val: any) => {\n          onChange({\n            ...parameters,\n            format: val.value,\n          });\n        }}\n        className=\"card-modal-select\"\n      />\n      <div className=\"card-modal-boolean\">\n        <FBCheckbox\n          onChangeValue={() => {\n            onChange({\n              ...parameters,\n              'ui:autofocus': parameters['ui:autofocus']\n                ? parameters['ui:autofocus'] !== true\n                : true,\n            });\n          }}\n          isChecked={\n            parameters['ui:autofocus']\n              ? parameters['ui:autofocus'] === true\n              : false\n          }\n          label=\"Auto Focus\"\n        />\n      </div>\n    </div>\n  );\n}\n\nfunction LongAnswer({\n  parameters,\n  onChange,\n}: {\n  parameters: Parameters,\n  onChange: (newParams: Parameters) => void,\n}) {\n  return (\n    <React.Fragment>\n      <h5>Default input</h5>\n      <Input\n        value={parameters.default}\n        placeholder=\"Default\"\n        type=\"textarea\"\n        onChange={(ev: SyntheticInputEvent<HTMLInputElement>) =>\n          onChange({ ...parameters, default: ev.target.value })\n        }\n        className=\"card-textarea\"\n      />\n    </React.Fragment>\n  );\n}\n\nconst LongAnswerInput = {\n  longAnswer: {\n    displayName: 'Long Answer',\n    matchIf: [\n      {\n        types: ['string'],\n        widget: 'textarea',\n      },\n    ],\n    defaultDataSchema: {},\n    defaultUiSchema: {\n      'ui:widget': 'textarea',\n    },\n    type: 'string',\n    cardBody: LongAnswer,\n    modalBody: CardLongAnswerParameterInputs,\n  },\n};\n\nexport default LongAnswerInput;\n","// @flow\n\nimport React from 'react';\nimport { Input } from 'reactstrap';\nimport FBCheckbox from '../checkbox/FBCheckbox';\nimport Tooltip from '../Tooltip';\nimport type { Parameters } from '../types';\n\n// specify the inputs required for a number type object\nfunction CardNumberParameterInputs({\n  parameters,\n  onChange,\n}: {\n  parameters: Parameters,\n  onChange: (newParams: Parameters) => void,\n}) {\n  return (\n    <div>\n      <h4>\n        Multiple of{' '}\n        <Tooltip\n          id={`${parameters.path}_multiple`}\n          type=\"help\"\n          text=\"Require number to be a multiple of this number\"\n        />\n      </h4>\n      <Input\n        value={parameters.multipleOf ? parameters.multipleOf : ''}\n        placeholder=\"ex: 2\"\n        key=\"multipleOf\"\n        type=\"number\"\n        onChange={(ev: SyntheticInputEvent<HTMLInputElement>) => {\n          let newVal = parseFloat(ev.target.value);\n          if (Number.isNaN(newVal)) newVal = null;\n          onChange({\n            ...parameters,\n            multipleOf: newVal,\n          });\n        }}\n        className=\"card-modal-number\"\n      />\n      <h4>Minimum</h4>\n      <Input\n        value={parameters.minimum || parameters.exclusiveMinimum || ''}\n        placeholder=\"ex: 3\"\n        key=\"minimum\"\n        type=\"number\"\n        onChange={(ev: SyntheticInputEvent<HTMLInputElement>) => {\n          let newVal = parseFloat(ev.target.value);\n          if (Number.isNaN(newVal)) newVal = null;\n          // change either min or exclusiveMin depending on which one is active\n          if (parameters.exclusiveMinimum) {\n            onChange({\n              ...parameters,\n              exclusiveMinimum: newVal,\n              minimum: null,\n            });\n          } else {\n            onChange({\n              ...parameters,\n              minimum: newVal,\n              exclusiveMinimum: null,\n            });\n          }\n        }}\n        className=\"card-modal-number\"\n      />\n      <div className=\"card-modal-boolean\">\n        <FBCheckbox\n          key=\"exclusiveMinimum\"\n          onChangeValue={() => {\n            const newMin = parameters.minimum || parameters.exclusiveMinimum;\n            if (parameters.exclusiveMinimum) {\n              onChange({\n                ...parameters,\n                exclusiveMinimum: null,\n                minimum: newMin,\n              });\n            } else {\n              onChange({\n                ...parameters,\n                exclusiveMinimum: newMin,\n                minimum: null,\n              });\n            }\n          }}\n          isChecked={!!parameters.exclusiveMinimum}\n          disabled={!parameters.minimum && !parameters.exclusiveMinimum}\n          label=\"Exclusive Minimum\"\n        />\n      </div>\n      <h4>Maximum</h4>\n      <Input\n        value={parameters.maximum || parameters.exclusiveMaximum || ''}\n        placeholder=\"ex: 8\"\n        key=\"maximum\"\n        type=\"number\"\n        onChange={(ev: SyntheticInputEvent<HTMLInputElement>) => {\n          let newVal = parseFloat(ev.target.value);\n          if (Number.isNaN(newVal)) newVal = null;\n          // change either max or exclusiveMax depending on which one is active\n          if (parameters.exclusiveMinimum) {\n            onChange({\n              ...parameters,\n              exclusiveMaximum: newVal,\n              maximum: null,\n            });\n          } else {\n            onChange({\n              ...parameters,\n              maximum: newVal,\n              exclusiveMaximum: null,\n            });\n          }\n        }}\n        className=\"card-modal-number\"\n      />\n      <div className=\"card-modal-boolean\">\n        <FBCheckbox\n          key=\"exclusiveMaximum\"\n          onChangeValue={() => {\n            const newMax = parameters.maximum || parameters.exclusiveMaximum;\n            if (parameters.exclusiveMaximum) {\n              onChange({\n                ...parameters,\n                exclusiveMaximum: null,\n                maximum: newMax,\n              });\n            } else {\n              onChange({\n                ...parameters,\n                exclusiveMaximum: newMax,\n                maximum: null,\n              });\n            }\n          }}\n          isChecked={!!parameters.exclusiveMaximum}\n          disabled={!parameters.maximum && !parameters.exclusiveMaximum}\n          label=\"Exclusive Maximum\"\n        />\n      </div>\n    </div>\n  );\n}\n\nfunction NumberField({\n  parameters,\n  onChange,\n}: {\n  parameters: Parameters,\n  onChange: (newParams: Parameters) => void,\n}) {\n  return (\n    <React.Fragment>\n      <h5>Default number</h5>\n      <Input\n        value={parameters.default}\n        placeholder=\"Default\"\n        type=\"number\"\n        onChange={(ev: SyntheticInputEvent<HTMLInputElement>) =>\n          onChange({\n            ...parameters,\n            default: parseFloat(ev.target.value),\n          })\n        }\n        className=\"card-number\"\n      />\n    </React.Fragment>\n  );\n}\n\nconst NumberInputs = {\n  integer: {\n    displayName: 'Integer',\n    matchIf: [\n      {\n        types: ['integer'],\n      },\n      {\n        types: ['integer'],\n        widget: 'number',\n      },\n    ],\n    defaultDataSchema: {},\n    defaultUiSchema: {},\n    type: 'integer',\n    cardBody: NumberField,\n    modalBody: CardNumberParameterInputs,\n  },\n  number: {\n    displayName: 'Number',\n    matchIf: [\n      {\n        types: ['number'],\n      },\n    ],\n    defaultDataSchema: {},\n    defaultUiSchema: {},\n    type: 'number',\n    cardBody: NumberField,\n    modalBody: CardNumberParameterInputs,\n  },\n};\n\nexport default NumberInputs;\n","// @flow\n\nimport React from 'react';\nimport { Input } from 'reactstrap';\nimport {\n  generateElementComponentsFromSchemas,\n  generateCategoryHash,\n} from '../utils';\nimport type { Parameters, Mods } from '../types';\n\n// specify the inputs required for a string type object\nfunction CardArrayParameterInputs({\n  parameters,\n  onChange,\n}: {\n  parameters: Parameters,\n  onChange: ({ [string]: any }) => void,\n}) {\n  return (\n    <div>\n      <h4>Minimum Items</h4>\n      <Input\n        value={parameters.minItems || ''}\n        placeholder=\"ex: 2\"\n        key=\"minimum\"\n        type=\"number\"\n        onChange={(ev: SyntheticInputEvent<HTMLInputElement>) => {\n          onChange({\n            ...parameters,\n            minItems: parseInt(ev.target.value, 10),\n          });\n        }}\n        className=\"card-modal-number\"\n      />\n      <h4>Maximum Items</h4>\n      <Input\n        value={parameters.maxItems || ''}\n        placeholder=\"ex: 2\"\n        key=\"maximum\"\n        type=\"number\"\n        onChange={(ev: SyntheticInputEvent<HTMLInputElement>) => {\n          onChange({\n            ...parameters,\n            maxItems: parseInt(ev.target.value, 10),\n          });\n        }}\n        className=\"card-modal-number\"\n      />\n    </div>\n  );\n}\n\nfunction InnerCard({\n  parameters,\n  onChange,\n  mods,\n}: {\n  parameters: Parameters,\n  onChange: (newParams: Parameters) => void,\n  mods?: Mods,\n}) {\n  const newDataProps = {};\n  const newUiProps = {};\n  // parse components into data and ui relevant pieces\n  Object.keys(parameters).forEach((propName) => {\n    if (propName.startsWith('ui:*')) {\n      newUiProps[propName.substring(4)] = parameters[propName];\n    } else if (propName.startsWith('ui:')) {\n      newUiProps[propName] = parameters[propName];\n    } else if (!['name', 'required', 'lang'].includes(propName)) {\n      newDataProps[propName] = parameters[propName];\n    }\n  });\n\n  const definitionData = parameters.definitionData\n    ? parameters.definitionData\n    : {};\n  const definitionUi = parameters.definitionUi ? parameters.definitionUi : {};\n  const [cardOpen, setCardOpen] = React.useState(false);\n  if (parameters.type !== 'array') {\n    return <h4>Not an array </h4>;\n  }\n  return (\n    <div className=\"card-array\">\n      {generateElementComponentsFromSchemas({\n        schemaData: { properties: { Item: newDataProps.items } },\n        uiSchemaData: { Item: newUiProps.items },\n        onChange: (schema, uischema) => {\n          onChange({\n            ...parameters,\n            items: schema.properties.Item,\n            'ui:*items': uischema.Item || {},\n          });\n        },\n        language: 'json',\n        path: typeof parameters.path === 'string' ? parameters.path : 'array',\n        definitionData:\n          typeof definitionData === 'string' ? definitionData : {},\n        definitionUi: typeof definitionUi === 'string' ? definitionUi : {},\n        hideKey: true,\n        cardOpenArray: [cardOpen],\n        setCardOpenArray: (newArr) => setCardOpen(newArr[0]),\n        mods,\n        categoryHash: generateCategoryHash(mods),\n      })}\n    </div>\n  );\n}\n\nconst ArrayInputs = {\n  array: {\n    displayName: 'Array',\n    matchIf: [\n      {\n        types: ['array'],\n      },\n    ],\n    defaultDataSchema: {\n      items: { type: 'string' },\n    },\n    defaultUiSchema: {},\n    type: 'array',\n    cardBody: InnerCard,\n    modalBody: CardArrayParameterInputs,\n  },\n};\n\nexport default ArrayInputs;\n","// @flow\nimport ShortAnswerInputs from './ShortAnswerInputs';\nimport LongAnswerInputs from './LongAnswerInputs';\nimport NumberInputs from './NumberInputs';\nimport ArrayInputs from './ArrayInputs';\nimport DefaultInputs from './DefaultInputs';\nimport type { FormInput } from '../types';\n\nconst DEFAULT_FORM_INPUTS = ({\n  ...DefaultInputs,\n  ...ShortAnswerInputs,\n  ...LongAnswerInputs,\n  ...NumberInputs,\n  ...ArrayInputs,\n}: { [string]: FormInput });\n\nexport default DEFAULT_FORM_INPUTS;\n","// @flow\nimport * as React from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { Alert, Input } from 'reactstrap';\nimport { createUseStyles } from 'react-jss';\nimport Add from './Add';\nimport {\n  parse,\n  stringify,\n  checkForUnsupportedFeatures,\n  generateElementComponentsFromSchemas,\n  addCardObj,\n  addSectionObj,\n  onDragEnd,\n  countElementsFromSchema,\n  generateCategoryHash,\n} from './utils';\nimport type { Mods } from './types';\n\nconst useStyles = createUseStyles({\n  formBuilder: {\n    'text-align': 'center',\n    '& i': {\n      cursor: 'pointer',\n    },\n    '& .fa-question-circle': {\n      color: 'gray',\n    },\n    '& .fa-asterisk': {\n      'font-size': '.9em',\n      color: 'green',\n    },\n    '& .fa-plus-square': {\n      color: 'green',\n      'font-size': '1.5em',\n      margin: '0 auto',\n    },\n    '& .card-container': {\n      '&:hover': {\n        border: '1px solid green',\n      },\n      display: 'block',\n      width: '70%',\n      'min-width': '400px',\n      margin: '2em auto',\n      border: '1px solid gray',\n      'border-radius': '4px',\n      'background-color': 'white',\n      '& .toggle-collapse': {\n        margin: '0.25em .5em 0 .5em !important',\n      },\n      '& h4': {\n        width: '100%',\n        'text-align': 'left',\n        display: 'inline-block',\n        color: '#138AC2',\n        margin: '0.25em .5em 0 .5em',\n        'font-size': '18px',\n      },\n      '& .d-flex': {\n        'border-bottom': '1px solid gray',\n      },\n      '& .label': {\n        float: 'left',\n      },\n      '& .arrows': {\n        'text-align': 'right',\n        float: 'right',\n        '& .fa-trash': {\n          border: '1px solid #DE5354',\n          color: '#DE5354',\n        },\n        '& .fa': {\n          'border-radius': '4px',\n          padding: '.25em',\n          margin: '0 .5em 0 0',\n        },\n      },\n    },\n    '& .card-dependent': {\n      border: '1px dashed gray',\n    },\n    '& .card-requirements': {\n      border: '1px dashed black',\n    },\n    '& .section-container': {\n      '&:hover': {\n        border: '1px solid green',\n      },\n      display: 'block',\n      width: '90%',\n      'min-width': '400px',\n      margin: '2em auto',\n      border: '1px solid var(--gray)',\n      'border-radius': '4px',\n      'background-color': 'white',\n      '& .toggle-collapse': {\n        margin: '0.25em .5em 0 .5em !important',\n      },\n      '& h4': {\n        width: '100%',\n        'text-align': 'left',\n        display: 'inline-block',\n        color: '#138AC2',\n        margin: '0.25em .5em 0 .5em',\n        'font-size': '18px',\n      },\n      '& .d-flex': {\n        'border-bottom': '1px solid var(--gray)',\n      },\n      '& .label': {\n        float: 'left',\n      },\n      '& .arrows': {\n        'text-align': 'right',\n        float: 'right',\n        '& .fa-trash': {\n          border: '1px solid #DE5354',\n          color: '#DE5354',\n        },\n        '& .fa': {\n          'border-radius': '4px',\n          padding: '.25em',\n          margin: '0 .5em 0 0',\n        },\n      },\n    },\n    '& .section-dependent': {\n      border: '1px dashed gray',\n    },\n    '& .section-requirements': {\n      border: '1px dashed black',\n    },\n    '& .alert': {\n      textAlign: 'left',\n      width: '70%',\n      margin: '1em auto',\n      '& h5': {\n        color: 'black',\n        fontSize: '16px',\n        fontWeight: 'bold',\n        margin: '0',\n      },\n      '& li': { fontSize: '14px' },\n    },\n    '& .disabled-unchecked-checkbox': {\n      color: 'var(--gray)',\n      '& div::before': { backgroundColor: 'var(--light-gray)' },\n    },\n    '& .disabled-input': {\n      '& input': { backgroundColor: 'var(--light-gray)' },\n      '& input:focus': {\n        backgroundColor: 'var(--light-gray)',\n        border: '1px solid var(--gray)',\n      },\n    },\n  },\n  formHead: {\n    display: 'block',\n    margin: '0 auto',\n    'background-color': '#EBEBEB',\n    border: '1px solid #858F96',\n    'border-radius': '4px',\n    width: '70%',\n    padding: '10px',\n    '& div': {\n      width: '30%',\n      display: 'inline-block',\n      'text-align': 'left',\n      padding: '10px',\n    },\n    '& .form-title': {\n      'text-align': 'left',\n    },\n    '& .form-description': {\n      'text-align': 'left',\n    },\n    '& h5': {\n      'font-size': '14px',\n      'line-height': '21px',\n      'font-weight': 'bold',\n    },\n  },\n  formBody: {\n    display: 'flex',\n    'flex-direction': 'column',\n    '& .fa-pencil, & .fa-arrow-up, & .fa-arrow-down': {\n      border: '1px solid #1d71ad',\n      color: '#1d71ad',\n    },\n    '& .modal-body': {\n      maxHeight: '500px',\n      overflowY: 'scroll',\n    },\n    '& .card-container': {\n      width: '70%',\n      minWidth: '400px',\n      margin: '2em auto',\n      border: '1px solid var(--gray)',\n      borderRadius: '4px',\n      backgroundColor: 'white',\n      '& .toggle-collapse': { margin: '0.25em 0.5em 0 0.5em !important' },\n      '& h4': {\n        width: '100%',\n        textAlign: ['left', 'left'],\n        display: 'inline-block',\n        color: '#138ac2',\n        margin: '0.25em 0.5em 0 0.5em',\n        fontSize: '18px',\n      },\n      '& .d-flex': { borderBottom: '1px solid var(--gray)' },\n      '& .label': { cssFloat: 'left' },\n      '& .arrows': {\n        textAlign: 'right',\n        cssFloat: 'right',\n        '& .fa-trash': { border: '1px solid #de5354', color: '#de5354' },\n        '& .fa': {\n          borderRadius: '4px',\n          padding: '0.25em',\n          margin: '0 0.5em 0 0',\n        },\n      },\n    },\n    '& .card-container:hover': { border: '1px solid var(--green)' },\n    '& .card-dependent': { border: '1px dashed var(--gray)' },\n    '& .card-add': {\n      cursor: 'pointer',\n      display: 'block',\n      color: '$green',\n      fontSize: '1.5em',\n    },\n    '& .section-container': {\n      width: '90%',\n      minWidth: '400px',\n      margin: '2em auto',\n      border: '1px solid var(--gray)',\n      borderRadius: '4px',\n      '& .toggle-collapse': { margin: '0.25em 0.5em 0 0.5em !important' },\n      '& h4': {\n        width: '100%',\n        textAlign: ['left', 'left'],\n        display: 'inline-block',\n        color: '#138ac2',\n        margin: '0.25em 0.5em 0 0.5em',\n        fontSize: '18px',\n      },\n      '& .d-flex': { borderBottom: '1px solid var(--gray)' },\n      '& .label': { cssFloat: 'left' },\n      '& .arrows': {\n        textAlign: 'right',\n        cssFloat: 'right',\n        '& .fa-trash': { border: '1px solid #de5354', color: '#de5354' },\n        '& .fa': {\n          borderRadius: '4px',\n          padding: '0.25em',\n          margin: '0 0.5em 0 0',\n        },\n      },\n    },\n    '& .section-container:hover': { border: '1px solid var(--green)' },\n    '& .section-dependent': { border: '1px dashed var(--gray)' },\n    '& .section-requirements': { border: '1px dashed black' },\n  },\n  formFooter: {\n    marginTop: '1em',\n    textAlign: 'center',\n    '& i': { cursor: 'pointer', color: '$green', fontSize: '1.5em' },\n  },\n});\n\nexport default function FormBuilder({\n  schema,\n  uischema,\n  onChange,\n  lang,\n  mods,\n  className,\n}: {\n  schema: string,\n  uischema: string,\n  onChange: (string, string) => any,\n  lang: string,\n  mods?: Mods,\n  className?: string,\n}) {\n  const classes = useStyles();\n  const schemaData = (parse(schema, lang): { [string]: any }) || {};\n  schemaData.type = 'object';\n  const uiSchemaData = (parse(uischema, lang): { [string]: any }) || {};\n  const unsupportedFeatures = checkForUnsupportedFeatures(\n    schemaData,\n    uiSchemaData,\n    mods\n  );\n\n  const elementNum = countElementsFromSchema(schemaData);\n  const defaultCollapseStates = [...Array(elementNum)].map(() => false);\n  const [cardOpenArray, setCardOpenArray] = React.useState(\n    defaultCollapseStates\n  );\n  const categoryHash = generateCategoryHash(mods);\n\n  return (\n    <div className={`${classes.formBuilder} ${className || ''}`}>\n      <Alert\n        style={{\n          display: unsupportedFeatures.length === 0 ? 'none' : 'block',\n        }}\n        color=\"warning\"\n      >\n        <h5>Unsupported Features:</h5>\n        {unsupportedFeatures.map((message, index) => (\n          <li key={index}>{message}</li>\n        ))}\n      </Alert>\n      <div className={classes.formHead}>\n        <div>\n          <h5>Form Name</h5>\n          <Input\n            value={schemaData.title || ''}\n            placeholder=\"Title\"\n            type=\"text\"\n            onChange={(ev: SyntheticInputEvent<HTMLInputElement>) => {\n              onChange(\n                stringify(\n                  {\n                    ...schemaData,\n                    title: ev.target.value,\n                  },\n                  lang\n                ),\n                uischema\n              );\n            }}\n            className=\"form-title\"\n          />\n        </div>\n        <div>\n          <h5>Form Description</h5>\n          <Input\n            value={schemaData.description || ''}\n            placeholder=\"Description\"\n            type=\"text\"\n            onChange={(ev: SyntheticInputEvent<HTMLInputElement>) =>\n              onChange(\n                stringify(\n                  {\n                    ...schemaData,\n                    description: ev.target.value,\n                  },\n                  lang\n                ),\n                uischema\n              )\n            }\n            className=\"form-description\"\n          />\n        </div>\n      </div>\n      <div className={`form-body ${classes.formBody}`}>\n        <DragDropContext\n          onDragEnd={(result) =>\n            onDragEnd(result, {\n              schema: schemaData,\n              uischema: uiSchemaData,\n              onChange: (newSchema, newUiSchema) =>\n                onChange(\n                  stringify(newSchema, lang),\n                  stringify(newUiSchema, lang)\n                ),\n              definitionData: schemaData.definitions,\n              definitionUi: uiSchemaData.definitions,\n              categoryHash,\n            })\n          }\n          className=\"form-body\"\n        >\n          <Droppable droppableId=\"droppable\">\n            {(providedDroppable) => (\n              <div\n                ref={providedDroppable.innerRef}\n                {...providedDroppable.droppableProps}\n              >\n                {generateElementComponentsFromSchemas({\n                  schemaData,\n                  uiSchemaData,\n                  onChange: (newSchema, newUiSchema) =>\n                    onChange(\n                      stringify(newSchema, lang),\n                      stringify(newUiSchema, lang)\n                    ),\n                  definitionData: schemaData.definitions,\n                  definitionUi: uiSchemaData.definitions,\n                  path: 'root',\n                  cardOpenArray,\n                  setCardOpenArray,\n                  mods,\n                  categoryHash,\n                }).map((element: any, index) => (\n                  <Draggable\n                    key={element.key}\n                    draggableId={element.key}\n                    index={index}\n                  >\n                    {(providedDraggable) => (\n                      <div\n                        ref={providedDraggable.innerRef}\n                        {...providedDraggable.draggableProps}\n                        {...providedDraggable.dragHandleProps}\n                      >\n                        {element}\n                      </div>\n                    )}\n                  </Draggable>\n                ))}\n                {providedDroppable.placeholder}\n              </div>\n            )}\n          </Droppable>\n        </DragDropContext>\n      </div>\n      <div className={`form-footer ${classes.formFooter}`}>\n        <Add\n          name={`form-builder`}\n          addElem={(choice: string) => {\n            if (choice === 'card') {\n              addCardObj({\n                schema: schemaData,\n                uischema: uiSchemaData,\n                onChange: (newSchema, newUiSchema) =>\n                  onChange(\n                    stringify(newSchema, lang),\n                    stringify(newUiSchema, lang)\n                  ),\n                definitionData: schemaData.definitions,\n                definitionUi: uiSchemaData.definitions,\n                categoryHash,\n              });\n            } else if (choice === 'section') {\n              addSectionObj({\n                schema: schemaData,\n                uischema: uiSchemaData,\n                onChange: (newSchema, newUiSchema) =>\n                  onChange(\n                    stringify(newSchema, lang),\n                    stringify(newUiSchema, lang)\n                  ),\n                definitionData: schemaData.definitions,\n                definitionUi: uiSchemaData.definitions,\n                categoryHash,\n              });\n            }\n          }}\n          hidden={\n            schemaData.properties &&\n            Object.keys(schemaData.properties).length !== 0\n          }\n        />\n      </div>\n    </div>\n  );\n}\n","// @flow\n\nimport React from 'react';\nimport {\n  generateElementComponentsFromSchemas,\n  countElementsFromSchema,\n  addCardObj,\n  addSectionObj,\n} from './utils';\nimport Add from './Add';\nimport type { Mods } from './types';\n\nexport default function CardGallery({\n  definitionSchema,\n  definitionUiSchema,\n  onChange,\n  mods,\n  categoryHash,\n}: {\n  definitionSchema: { [string]: any },\n  definitionUiSchema: { [string]: any },\n  onChange: ({ [string]: any }, { [string]: any }) => void,\n  mods?: Mods,\n  categoryHash: { [string]: string },\n}) {\n  const elementNum = countElementsFromSchema({\n    properties: definitionSchema,\n  });\n  const defaultCollapseStates = [...Array(elementNum)].map(() => false);\n  const [cardOpenArray, setCardOpenArray] = React.useState(\n    defaultCollapseStates\n  );\n\n  return (\n    <div className=\"form-gallery\">\n      {generateElementComponentsFromSchemas({\n        schemaData: { properties: definitionSchema },\n        uiSchemaData: definitionUiSchema,\n        onChange: (newDefinitions, newDefinitionUis) => {\n          const oldUi = newDefinitionUis;\n          const newUi = {};\n\n          Object.keys(oldUi).forEach((definedUi) => {\n            if (!['definitions', 'ui:order'].includes(definedUi))\n              newUi[definedUi] = oldUi[definedUi];\n          });\n          onChange(newDefinitions.properties, newUi);\n        },\n        path: 'definitions',\n        definitionData: definitionSchema,\n        definitionUi: definitionUiSchema,\n        cardOpenArray,\n        setCardOpenArray,\n        mods,\n        categoryHash,\n      }).map((element: any) => (\n        <div\n          key={typeof element.key === 'string' ? element.key : ''}\n          className=\"form-gallery-container\"\n        >\n          {element}\n        </div>\n      ))}\n      <div className=\"form-footer\">\n        <Add\n          name={`form-gallery`}\n          addElem={(choice: string) => {\n            if (choice === 'card') {\n              addCardObj({\n                schema: { properties: definitionSchema },\n                uischema: definitionUiSchema,\n                onChange: (newDefinitions, newDefinitionUis) => {\n                  const oldUi = newDefinitionUis;\n                  const newUi = {};\n\n                  Object.keys(oldUi).forEach((definedUiSchemaKey) => {\n                    if (\n                      !['definitions', 'ui:order'].includes(definedUiSchemaKey)\n                    )\n                      newUi[definedUiSchemaKey] = oldUi[definedUiSchemaKey];\n                  });\n                  onChange(newDefinitions.properties, newUi);\n                },\n                definitionData: definitionSchema,\n                definitionUi: definitionUiSchema,\n                categoryHash,\n              });\n            } else if (choice === 'section') {\n              addSectionObj({\n                schema: { properties: definitionSchema },\n                uischema: definitionUiSchema,\n                onChange: (newDefinitions, newDefinitionUis) => {\n                  const oldUi = newDefinitionUis;\n                  const newUi = {};\n\n                  Object.keys(oldUi).forEach((definedUiSchemaKey) => {\n                    if (\n                      !['definitions', 'ui:order'].includes(definedUiSchemaKey)\n                    )\n                      newUi[definedUiSchemaKey] = oldUi[definedUiSchemaKey];\n                  });\n                  onChange(newDefinitions.properties, newUi);\n                },\n                definitionData: definitionSchema,\n                definitionUi: definitionUiSchema,\n                categoryHash,\n              });\n            }\n          }}\n          hidden={\n            !!definitionSchema && Object.keys(definitionSchema).length !== 0\n          }\n        />\n      </div>\n    </div>\n  );\n}\n","// @flow\nimport * as React from 'react';\nimport { createUseStyles } from 'react-jss';\nimport CardGallery from './CardGallery';\nimport {\n  parse,\n  stringify,\n  propagateDefinitionChanges,\n  generateCategoryHash,\n} from './utils';\nimport type { Mods } from './types';\n\nconst useStyles = createUseStyles({\n  preDefinedGallery: {\n    display: 'flex',\n    'flex-direction': 'column',\n    'text-align': 'center',\n    '& i': {\n      cursor: 'pointer',\n    },\n    '& .fa-question-circle': {\n      color: 'gray',\n    },\n    '& .fa-asterisk': {\n      'font-size': '.9em',\n      color: 'green',\n    },\n    '& .fa-plus-square': {\n      color: 'green',\n      'font-size': '1.5em',\n      margin: '0 auto',\n    },\n    '& .card-container': {\n      '&:hover': {\n        border: '1px solid green',\n      },\n      width: '70%',\n      'min-width': '400px',\n      margin: '2em auto',\n      border: '1px solid gray',\n      'border-radius': '4px',\n      'background-color': 'white',\n      '& .toggle-collapse': {\n        margin: '0.25em .5em 0 .5em !important',\n      },\n      '& h4': {\n        width: '100%',\n        'text-align': 'left',\n        display: 'inline-block',\n        color: '#138AC2',\n        margin: '0.25em .5em 0 .5em',\n        'font-size': '18px',\n      },\n      '& .d-flex': {\n        'border-bottom': '1px solid gray',\n      },\n      '& .label': {\n        float: 'left',\n      },\n      '& .arrows': {\n        'text-align': 'right',\n        float: 'right',\n        '& .fa-trash': {\n          border: '1px solid #DE5354',\n          color: '#DE5354',\n        },\n        '& .fa': {\n          'border-radius': '4px',\n          padding: '.25em',\n          margin: '0 .5em 0 0',\n        },\n      },\n    },\n    '& .card-requirements': {\n      border: '1px dashed black',\n    },\n    '& .section-container': {\n      '&:hover': {\n        border: '1px solid green',\n      },\n      display: 'block',\n      width: '90%',\n      'min-width': '400px',\n      margin: '2em auto',\n      border: '1px solid var(--gray)',\n      'border-radius': '4px',\n      'background-color': 'white',\n      '& .toggle-collapse': {\n        margin: '0.25em .5em 0 .5em !important',\n      },\n      '& h4': {\n        width: '100%',\n        'text-align': 'left',\n        display: 'inline-block',\n        color: '#138AC2',\n        margin: '0.25em .5em 0 .5em',\n        'font-size': '18px',\n      },\n      '& .d-flex': {\n        'border-bottom': '1px solid var(--gray)',\n      },\n      '& .label': {\n        float: 'left',\n      },\n      '& .arrows': {\n        'text-align': 'right',\n        float: 'right',\n        '& .fa-trash': {\n          border: '1px solid #DE5354',\n          color: '#DE5354',\n        },\n        '& .fa': {\n          'border-radius': '4px',\n          padding: '.25em',\n          margin: '0 .5em 0 0',\n        },\n      },\n    },\n    '& .section-dependent': {\n      border: '1px dashed gray',\n    },\n    '& .section-requirements': {\n      border: '1px dashed black',\n    },\n    '& .fa-pencil, & .fa-arrow-up, & .fa-arrow-down': {\n      border: '1px solid #1d71ad',\n      color: '#1d71ad',\n    },\n    '& .modal-body': {\n      maxHeight: '500px',\n      overflowY: 'scroll',\n    },\n    '& .card-container:hover': { border: '1px solid var(--green)' },\n    '& .card-dependent': { border: '1px dashed var(--gray)' },\n    '& .card-add': {\n      cursor: 'pointer',\n      display: 'block',\n      color: '$green',\n      fontSize: '1.5em',\n    },\n\n    '& .section-container:hover': { border: '1px solid var(--green)' },\n  },\n});\n\nexport default function PreDefinedGallery({\n  schema,\n  uischema,\n  onChange,\n  lang,\n  mods,\n}: {\n  schema: string,\n  uischema: string,\n  onChange: (string, string) => any,\n  lang: string,\n  mods?: Mods,\n}) {\n  const classes = useStyles();\n  const schemaData = (parse(schema, lang): { [string]: any }) || {};\n  const uiSchemaData = (parse(uischema, lang): { [string]: any }) || {};\n  const categoryHash = generateCategoryHash(mods);\n\n  React.useEffect(() => {\n    if (!uiSchemaData.definitions) {\n      // eslint-disable-next-line no-console\n      console.log('Parsing UI schema to assign UI for definitions');\n      // need to create definitions from scratch\n      const references = [];\n      // recursively search for all $refs in the schemaData\n      const findRefs = (name, schemaObject) => {\n        if (!schemaObject) return;\n        if (typeof schemaObject === 'object')\n          Object.keys(schemaObject).forEach((key) => {\n            if (typeof key === 'string') {\n              if (key === '$ref') references.push(name);\n              findRefs(key, schemaObject[key]);\n            }\n          });\n        if (Array.isArray(schemaObject))\n          schemaObject.forEach((innerObj) => {\n            findRefs(name, innerObj);\n          });\n      };\n\n      findRefs('root', schemaData);\n\n      uiSchemaData.definitions = {};\n      const referenceSet = new Set(references);\n      Object.keys(uiSchemaData).forEach((uiProp) => {\n        if (referenceSet.has(uiProp))\n          uiSchemaData.definitions[uiProp] = uiSchemaData[uiProp];\n      });\n\n      onChange(stringify(schemaData, lang), stringify(uiSchemaData, lang));\n    }\n  }, [uischema, schema]);\n  return (\n    <div className={classes.preDefinedGallery}>\n      <CardGallery\n        definitionSchema={schemaData.definitions}\n        definitionUiSchema={uiSchemaData.definitions}\n        language={lang}\n        onChange={(\n          newDefinitions: { [string]: any },\n          newDefinitionsUi: { [string]: any }\n        ) => {\n          schemaData.definitions = newDefinitions;\n          uiSchemaData.definitions = newDefinitionsUi;\n          // propagate changes in ui definitions to all relavant parties in main schema\n\n          propagateDefinitionChanges(\n            schemaData,\n            uiSchemaData,\n            (newSchema, newUiSchema) =>\n              onChange(\n                stringify(newSchema, lang),\n                stringify(newUiSchema, lang)\n              ),\n            categoryHash\n          );\n        }}\n        mods={mods}\n        categoryHash={categoryHash}\n      />\n    </div>\n  );\n}\n","// @flow\n\nimport React from \"react\";\nimport {\n  Alert,\n  Modal,\n  ModalHeader,\n  Button,\n  ModalBody,\n  ModalFooter,\n} from \"reactstrap\";\nimport { safeLoad as yamlParse, safeDump as yamlStringify } from \"js-yaml\";\n//import Form from \"react-jsonschema-form\";\nimport Form from \"@rjsf/material-ui\";\n//import Form from \"@rjsf/bootstrap-4\";\nimport Tabs from \"./tabs/Tabs\";\nimport YamlEditor from \"./yamlEditor/YamlEditor\";\nimport ErrorBoundary from \"./ErrorBoundary\";\nimport FormBuilder from \"./formBuilder/FormBuilder\";\nimport PreDefinedGallery from \"./formBuilder/PreDefinedGallery\";\n\ntype Props = {\n  lang: string,\n  schema: string,\n  uischema: string,\n  onChange?: (schema: string, uischema: string) => void,\n  schemaTitle?: string,\n  uischemaTitle?: string,\n  width?: string,\n  height?: string,\n};\n\ntype State = {\n  formData: any,\n  formToggle: boolean,\n  outputToggle: boolean,\n  schemaFormErrorFlag: string,\n  validFormInput: boolean,\n  submissionData: any,\n};\n\n// parse in either YAML or JSON\nfunction parseForJsonSchemaForm(text: string, language: string) {\n  if (!text || text === \"null\") return {};\n  return language === \"yaml\" ? yamlParse(text) : JSON.parse(text);\n}\n\n// stringify in either YAML or JSON\nfunction stringify(obj: any, language: string) {\n  if (!obj) return \"\";\n  return language === \"yaml\"\n    ? yamlStringify(obj, { skipInvalid: true })\n    : JSON.stringify(obj, null, 5);\n}\n\n// return error message for parsing or blank if no error\nfunction checkError(text: string, language: string) {\n  let data;\n  try {\n    data = parseForJsonSchemaForm(text, language);\n  } catch (e) {\n    return e.toString();\n  }\n  if (typeof data === \"string\") {\n    return \"Received a string instead of object.\";\n  }\n  return \"\";\n}\n\n// generalized editor, either json or yaml\nconst LangEditor = (parameters: {\n  name: string,\n  onChange: (string) => any,\n  lang: string,\n  value: string,\n  readOnly?: boolean,\n}) => {\n  return (\n    <YamlEditor\n      name={parameters.name}\n      width={\"400px\"}\n      height={\"400px\"}\n      onChange={parameters.onChange}\n      yaml={parameters.value}\n      readOnly={parameters.readOnly}\n    />\n  );\n};\n\nclass JsonSchemaFormEditor extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    // assign initial values\n    this.state = {\n      formData: {},\n      formToggle: true,\n      outputToggle: false,\n      schemaFormErrorFlag: \"\",\n      validFormInput: false,\n      editorWidth: 700,\n      submissionData: {},\n    };\n  }\n\n  // update state schema and indicate parsing errors\n  updateSchema(text: string) {\n    // update parent\n    if (this.props.onChange) this.props.onChange(text, this.props.uischema);\n  }\n\n  // update state ui schema and indicate parsing errors\n  updateUISchema(text: string) {\n    // update parent\n    if (this.props.onChange) this.props.onChange(this.props.schema, text);\n  }\n\n  // update the internal form data state\n  updateFormData(text: string) {\n    try {\n      const data = parseForJsonSchemaForm(text, this.props.lang);\n      this.setState({\n        formData: data,\n        schemaFormErrorFlag: \"\",\n      });\n    } catch (err) {\n      this.setState({\n        schemaFormErrorFlag: err.toString(),\n      });\n    }\n  }\n\n  render() {\n    const schemaError = checkError(this.props.schema, this.props.lang);\n    const schemaUiError = checkError(this.props.uischema, this.props.lang);\n    return (\n      <div\n        style={{\n          width: this.props.width ? this.props.width : \"100%\",\n          height: this.props.height ? this.props.height : \"500px\",\n        }}\n        className=\"playground-main\"\n      >\n        <Alert\n          style={{\n            display: schemaError === \"\" ? \"none\" : \"block\",\n          }}\n          color=\"danger\"\n        >\n          <h5>Schema:</h5> {schemaError}\n        </Alert>\n        <Alert\n          style={{\n            display: schemaUiError === \"\" ? \"none\" : \"block\",\n          }}\n          color=\"danger\"\n        >\n          <h5>UI Schema:</h5> {schemaUiError}\n        </Alert>\n        <Alert\n          style={{\n            display: this.state.schemaFormErrorFlag === \"\" ? \"none\" : \"block\",\n          }}\n          color=\"danger\"\n        >\n          <h5>Form:</h5> {this.state.schemaFormErrorFlag}\n        </Alert>\n        <Tabs\n          tabs={[\n            {\n              name: \"Visual Form Builder\",\n              id: \"form-builder\",\n              content: (\n                <div\n                  className=\"tab-pane\"\n                  style={{\n                    height: this.props.height ? this.props.height : \"500px\",\n                  }}\n                >\n                  <ErrorBoundary onErr={() => {}}>\n                    <FormBuilder\n                      schema={this.props.schema}\n                      uischema={this.props.uischema}\n                      onChange={(newSchema: string, newUiSchema: string) => {\n                        if (this.props.onChange)\n                          this.props.onChange(newSchema, newUiSchema);\n                      }}\n                      lang={this.props.lang}\n                    />\n                  </ErrorBoundary>\n                </div>\n              ),\n            },\n            {\n              name: \"Preview Form\",\n              id: \"preview-form\",\n              content: (\n                <div\n                  className=\"tab-pane\"\n                  style={{\n                    height: this.props.height ? this.props.height : \"500px\",\n                  }}\n                >\n                  <ErrorBoundary\n                    onErr={(err: string) => {\n                      this.setState({\n                        schemaFormErrorFlag: err,\n                      });\n                    }}\n                    errMessage=\"Error parsing JSON Schema\"\n                  >\n                    <Form\n                      schema={\n                        schemaError === \"\"\n                          ? parseForJsonSchemaForm(\n                              this.props.schema,\n                              this.props.lang\n                            )\n                          : {}\n                      }\n                      uiSchema={\n                        schemaUiError === \"\"\n                          ? parseForJsonSchemaForm(\n                              this.props.uischema,\n                              this.props.lang\n                            )\n                          : {}\n                      }\n                      onChange={(formData) =>\n                        this.updateFormData(JSON.stringify(formData.formData))\n                      }\n                      formData={this.state.formData}\n                      submitButtonMessage={\"Submit\"}\n                      onSubmit={(submissionData) => {\n                        // below only runs if validation succeeded\n                        this.setState({\n                          validFormInput: true,\n                          outputToggle: true,\n                          submissionData,\n                        });\n                      }}\n                    />\n                  </ErrorBoundary>\n                  <Modal isOpen={this.state.outputToggle}>\n                    <ModalHeader>Form output preview</ModalHeader>\n                    <ModalBody>\n                      <div className=\"editor-container\">\n                        <ErrorBoundary\n                          onErr={() => {}}\n                          errMessage={\"Error parsing JSON Schema Form output\"}\n                        >\n                          {LangEditor({\n                            name: \"Output Data\",\n                            onChange: () => {},\n                            lang: this.props.lang,\n                            value: stringify(this.state.submissionData, \"json\"),\n                            readOnly: true,\n                          })}\n                        </ErrorBoundary>\n                        <br />\n                      </div>\n                    </ModalBody>\n                    <ModalFooter>\n                      <Button\n                        onClick={() => {\n                          this.setState({\n                            outputToggle: false,\n                          });\n                        }}\n                        color=\"secondary\"\n                      >\n                        Close\n                      </Button>\n                    </ModalFooter>\n                  </Modal>\n                </div>\n              ),\n            },\n            {\n              name: \"Edit Schema\",\n              id: \"editors\",\n              content: (\n                <div\n                  className=\"tab-pane\"\n                  style={{\n                    height: this.props.height ? this.props.height : \"500px\",\n                  }}\n                >\n                  <div className=\"editor-container\">\n                    <ErrorBoundary\n                      onErr={(err: string) => {\n                        // if rendering initial value causes a crash\n                        // eslint-disable-next-line no-console\n                        console.error(err);\n                        this.updateSchema(\"{}\");\n                      }}\n                      errMessage={\"Error parsing JSON Schema input\"}\n                    >\n                      {LangEditor({\n                        name: \"Data Schema\",\n                        onChange: (data: any) => this.updateSchema(data),\n                        lang: this.props.lang,\n                        value: this.props.schema,\n                      })}\n                    </ErrorBoundary>\n                    <br />\n                  </div>\n                  <div className=\"editor-container\">\n                    <ErrorBoundary\n                      onErr={(err: string) => {\n                        // if rendering initial value causes a crash\n                        // eslint-disable-next-line no-console\n                        console.error(err);\n                        this.updateUISchema(\"{}\");\n                      }}\n                      errMessage={\"Error parsing JSON UI Schema input\"}\n                    >\n                      {LangEditor({\n                        name: \"UI Schema\",\n                        onChange: (data: any) => this.updateUISchema(data),\n                        lang: this.props.lang,\n                        value: this.props.uischema,\n                      })}\n                    </ErrorBoundary>\n                  </div>\n                </div>\n              ),\n            },\n            {\n              name: \"Pre-Configured Components\",\n              id: \"pre-configured\",\n              content: (\n                <div\n                  className=\"tab-pane\"\n                  style={{\n                    height: this.props.height ? this.props.height : \"500px\",\n                  }}\n                >\n                  <ErrorBoundary onErr={() => {}}>\n                    <PreDefinedGallery\n                      schema={this.props.schema}\n                      uischema={this.props.uischema}\n                      onChange={(newSchema: string, newUiSchema: string) => {\n                        if (this.props.onChange)\n                          this.props.onChange(newSchema, newUiSchema);\n                      }}\n                      lang={this.props.lang}\n                    />\n                  </ErrorBoundary>\n                </div>\n              ),\n            },\n          ]}\n          preventRerender\n        />\n      </div>\n    );\n  }\n}\n\nexport default JsonSchemaFormEditor;\n","// @flow\n\nimport React from \"react\";\n\nimport JsonSchemaFormEditor from \"./JsonSchemaFormEditor\";\n\ntype Props = {\n  title: string,\n};\n\ntype State = {\n  schema: string,\n  uischema: string,\n};\n\nclass PlaygroundContainer extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      schema: ``,\n      uischema: ``,\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"service-playground\">\n        <div className=\"playground-info\">\n          <h1>{this.props.title}</h1>\n        </div>\n        <JsonSchemaFormEditor\n          lang={\"yaml\"}\n          schema={this.state.schema}\n          uischema={this.state.uischema}\n          schemaTitle=\"Data Schema\"\n          uischemaTitle=\"UI Schema\"\n          onChange={(newSchema: string, newUiSchema: string) => {\n            // could do operations with this\n            this.setState({\n              schema: newSchema,\n              uischema: newUiSchema,\n            });\n          }}\n          width=\"95%\"\n          height=\"800px\"\n        />\n      </div>\n    );\n  }\n}\n\nexport default PlaygroundContainer;\n","import React from \"react\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport PlaygroundContainer from \"./PlaygroundContainer\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <HashRouter basename='/'>\n      <Route exact path=\"/\" component={\n        <body>\n          <PlaygroundContainer title=\"Form Builder Demo\" />\n        </body>\n      } />\n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <head>\n      <link\n        rel=\"stylesheet\"\n        href=\"https://use.fontawesome.com/releases/v5.11.2/css/all.css\"\n      />\n      <link\n        rel=\"stylesheet\"\n        href=\"https://use.fontawesome.com/releases/v5.11.2/css/v4-shims.css\"\n      />\n    </head>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}